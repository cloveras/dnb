{
  "swagger" : "2.0",
  "info" : {
    "description" : "APIs for third parties\n\nGuidelines:\n* Parameters: camelCase, starting with lowercase\n* Attributes of data objects: CamelCase, starting with uppercase\n\nStandards:\n* Country: ISO 3166-1 alpha-2: https://www.iso.org/standard/63546.html\n* Currency: ISO 4217: alpha 3-letter upcase e.g “EUR”: https://www.iso.org/iso-4217-currency-codes.html\n* Date: ISO 8601: www.iso.org/iso/home/standards/iso8601.htm\n* SWIFT BIC: ISO 9362: https://en.wikipedia.org/wiki/ISO_9362\n* IBAN ISO 13616:2007: https://www.iso.org/standard/41031.html\n* MCC: ISO 18245: https://www.iso.org/standard/33365.html (https://github.com/greggles/mcc-codes)\n\nData objects, payloads, etc are minimal versions - and in some cases copied from “API.json”: https://github.com/cloveras/dnb/\n",
    "version" : "1.0.5",
    "title" : "7580",
    "termsOfService" : "http://developer.dnb.no/terms",
    "contact" : {
      "name" : "Christian Løverås",
      "url" : "https://dnb.no",
      "email" : "cl@dnb.no"
    }
  },
  "host" : "1gh7oej.restletmocks.net",
  "schemes" : [ "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/customers/person/{customerId}" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "View customer",
        "parameters" : [ {
          "name" : "Customer ID",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/CustomerIndividual"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/customers" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "Search customers",
        "description" : "Not in scope for first release\n(Returns CustomerIndividual for now.)\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerSSN",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CustomerIndividual"
              }
            }
          },
          "400" : {
            "description" : "Status 400"
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      }
    },
    "/customers/{customerId}/accounts" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "Get accounts for customer",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Account"
              }
            }
          },
          "404" : {
            "description" : "No accounts."
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/accounts" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get account list for customer",
        "description" : "customerId is sent as part of the context object",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Account"
              }
            }
          },
          "400" : {
            "description" : "Status 400"
          },
          "404" : {
            "description" : "customerId unknown"
          }
        }
      }
    },
    "/accounts/{accountNumber}" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get account details",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          },
          "404" : {
            "description" : "customerId unknown"
          }
        }
      },
      "parameters" : [ {
        "name" : "accountNumber",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/accounts/{accountNumber}/balances" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get account balances",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/AccountBalance"
            }
          },
          "401" : {
            "description" : "No balance for you."
          },
          "404" : {
            "description" : "Account not found."
          },
          "417" : {
            "description" : "Expectation Failed: Requires prior (paranormal) transfer of customer's expectation (haha)."
          }
        }
      },
      "parameters" : [ {
        "name" : "accountNumber",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Account number, 11 digits."
      } ]
    },
    "/accounts/{accountNumber}/transactions" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get transactions for account",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "PageSize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of transactions on one page"
        }, {
          "name" : "PageNumber",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "SortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "\"Ascending\", \"Descending\""
        }, {
          "name" : "DateFrom",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "date",
          "description" : "Filter for start date (included)"
        }, {
          "name" : "DateTo",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "date",
          "description" : "Filter for end date (included)"
        }, {
          "name" : "AmountFrom",
          "in" : "query",
          "required" : false,
          "type" : "number",
          "description" : "Filter for minimum amount (included)"
        }, {
          "name" : "AmountTo",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter for maximum amount (included)"
        }, {
          "name" : "MCC",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter for MCC"
        }, {
          "name" : "FreeText",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter for free text"
        }, {
          "name" : "IncludePending",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "description" : "Should pending transactions be included?"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AccountTransaction"
              }
            }
          },
          "401" : {
            "description" : "Status 401"
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "accountNumber",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/accounts/{accountNumber}/transactions/{transactionId}" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get transaction details",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/AccountTransaction"
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "accountNumber",
        "in" : "path",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "transactionId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/cards/list/{customerId}" : {
      "get" : {
        "tags" : [ "Card" ],
        "summary" : "Get cards for a customer",
        "description" : "customerId is sent in the context object",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Card"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/cards/{cardNumber}" : {
      "get" : {
        "tags" : [ "Card" ],
        "summary" : "Get card details",
        "description" : "Includes balance and credit limit (when applicable).",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Card"
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "cardNumber",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/cards/accounts/{cardNumber}/transactions" : {
      "get" : {
        "tags" : [ "Card" ],
        "summary" : "Get card transactions",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CardTransaction"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "cardNumber",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/cards/{cardNumber}/actions/block" : {
      "patch" : {
        "tags" : [ "Card" ],
        "summary" : "Block card",
        "description" : "Updates the \"BlockingInformation\".",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          },
          "404" : {
            "description" : "Status 404",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "cardNumber",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/cards/{cardNumber}/actions/unblock" : {
      "patch" : {
        "tags" : [ "Card" ],
        "summary" : "Unblock card",
        "parameters" : [ {
          "name" : "Unblock credit card",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "headers" : {
              "Unblock" : {
                "type" : "string"
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "cardNumber",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/cards/invoice/{cardNumber}/{year}/{month}" : {
      "get" : {
        "tags" : [ "Card" ],
        "summary" : "Get card invoice",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/CardInvoice"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "cardNumber",
        "in" : "path",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "year",
        "in" : "path",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "month",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/payments" : {
      "post" : {
        "tags" : [ "Payments" ],
        "summary" : "Initiate payment",
        "description" : "Domestic payment with KID or message",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PaymentInitiation"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "string",
              "description" : "Returning id of the new payment"
            }
          },
          "400" : {
            "description" : "Status 400"
          },
          "401" : {
            "description" : "Status 401"
          }
        }
      }
    },
    "/payments/due/{accountNumber}" : {
      "get" : {
        "tags" : [ "Payments" ],
        "summary" : "Get due payments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "startDate",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "date"
        }, {
          "name" : "stopDate",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "date"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Payment"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "accountNumber",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/payments/change/{paymentId}" : {
      "patch" : {
        "tags" : [ "Payments" ],
        "summary" : "Change existing payment",
        "description" : "Change the following:\n* Date\n* Amount\n* Status (deactivate, reactivate)",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          },
          "400" : {
            "description" : "Status 400"
          }
        }
      },
      "parameters" : [ {
        "name" : "paymentId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/payments/{paymentId}/delete" : {
      "delete" : {
        "tags" : [ "Payments" ],
        "summary" : "Delete payment",
        "description" : "Mark for deletion, or \"physically\" delete: TBD",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Status 404",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "paymentId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/currency/convert/{base}/{currency}/{amount}" : {
      "get" : {
        "tags" : [ "Currency" ],
        "summary" : "Convert amount from CUR1 to CUR2",
        "description" : "Quite basic for now. Input welcome.",
        "parameters" : [ {
          "name" : "date",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "date",
          "description" : "End of day. ISO 8601: \"YYYY-MM-DD\": https://en.wikipedia.org/wiki/ISO_8601"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "base",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "ISO 4217: alpha 3-letter upcase e.g EUR"
      }, {
        "name" : "currency",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "ISO 4217: alpha 3-letter upcase e.g EUR"
      }, {
        "name" : "amount",
        "in" : "path",
        "required" : true,
        "type" : "number"
      } ]
    },
    "/currency/list/{base}" : {
      "get" : {
        "tags" : [ "Currency" ],
        "summary" : "Get a list rates for the most common currencies, with a specified base",
        "description" : "Suitable for making a table or similar.\n\n```\n{\n    timestamp: 1504548341,\n    base: \"NOK\",\n    rates: {\n        AED: 3.672538,\n        AFN: 66.809999,\n        ALL: 125.716501,\n        AMD: 484.902502,\n        ANG: 1.788575,\n        AOA: 135.295998,\n        ARS: 9.750101,\n        AUD: 1.390866,\n        /* ... */\n    }\n}\n```",
        "parameters" : [ {
          "name" : "date",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "End of day. ISO 8601: “YYYY-MM-DD”: https://en.wikipedia.org/wiki/ISO_8601"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "base",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "\"Home\" currency. ISO 4217: alpha 3-letter upcase e.g EUR"
      } ]
    },
    "/location/branch/findbyaddress" : {
      "get" : {
        "tags" : [ "Location" ],
        "summary" : "Find nearest branch by address",
        "description" : "Base geocoding functionality similar to Google Maps: https://developers.google.com/maps/documentation/geocoding/intro",
        "parameters" : [ {
          "name" : "address",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "For now: Assume geocoding functionality similar to Google Maps: https://developers.google.com/maps/documentation/geocoding/intro"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Branch"
            }
          }
        }
      }
    },
    "/location/branch/{latitude}/{longditude}/" : {
      "get" : {
        "tags" : [ "Location" ],
        "summary" : "Find nearest branch by coordinates",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Branch"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "latitude",
        "in" : "path",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "longditude",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/location/branch/{branchid}/details" : {
      "get" : {
        "tags" : [ "Location" ],
        "summary" : "Get branch details",
        "description" : "Contact information, opening hours, etc.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Branch"
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "patch" : {
        "tags" : [ "Location" ],
        "summary" : "Update branch details",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          },
          "400" : {
            "description" : "Status 400"
          }
        }
      },
      "parameters" : [ {
        "name" : "branchid",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Id of branch"
      } ]
    },
    "/location/branch/{branchid}/openingtimes" : {
      "get" : {
        "tags" : [ "Location" ],
        "summary" : "Get a branch's opening times",
        "description" : "Opening times is also included in Branch.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/OpeningTimes"
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Location" ],
        "summary" : "Update a branch's opening times",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          },
          "400" : {
            "description" : "Status 400"
          }
        }
      },
      "parameters" : [ {
        "name" : "branchid",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Id of a branch"
      } ]
    },
    "/location/atm/{latitude}/{longditude}/" : {
      "get" : {
        "tags" : [ "Location" ],
        "summary" : "Find nearest ATM by coordinates",
        "description" : "If no details (as for now): Assume ATM is open 24h.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "List of minibank locations",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "latitude",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Current latitude. Example: 37.4238253802915"
      }, {
        "name" : "longditude",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Current longditude. Example: -122.0842499"
      } ]
    },
    "/location/branches" : {
      "get" : {
        "tags" : [ "Location" ],
        "summary" : "Get list of all DNB branches",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Branch"
              }
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "OAuth2" : {
      "type" : "oauth2",
      "authorizationUrl" : "https://api.dnb.no/oauth/authorize",
      "tokenUrl" : "https://api.dnb.no/oauth/token",
      "flow" : "accessCode",
      "scopes" : {
        "read" : "Read",
        "write" : "Write"
      }
    }
  },
  "definitions" : {
    "CustomerIndividual" : {
      "type" : "object",
      "required" : [ "Address", "CountryOfBirth", "FirstName", "LastName", "PersonNumber" ],
      "properties" : {
        "PersonNumber" : {
          "type" : "string",
          "description" : "11 digits."
        },
        "FirstName" : {
          "type" : "string",
          "description" : "Rune"
        },
        "LastName" : {
          "type" : "string",
          "description" : "Bjerke"
        },
        "Address" : {
          "$ref" : "#/definitions/Address"
        },
        "CountryOfBirth" : {
          "type" : "string",
          "description" : "ISO 3166-1 alpha-2: https://www.iso.org/standard/63546.html"
        },
        "Email" : {
          "type" : "string",
          "description" : "example@example.com"
        },
        "Phone" : {
          "type" : "string",
          "description" : "+47 91 50 48 00"
        }
      }
    },
    "CustomerOrganization" : {
      "type" : "object",
      "required" : [ "customerDetails", "customerId" ],
      "properties" : {
        "customerId" : {
          "type" : "string"
        },
        "customerDetails" : {
          "type" : "string"
        }
      },
      "description" : "Minimal, initial version."
    },
    "Account" : {
      "type" : "object",
      "required" : [ "AccountNumber", "AccountOwner", "BalanceAvailable", "TermsAndConditionsId", "Type" ],
      "properties" : {
        "AccountNumber" : {
          "type" : "string",
          "description" : "11 digits. Bank, etc can be determined from this: https://no.wikipedia.org/wiki/Kontonummer"
        },
        "Type" : {
          "type" : "string",
          "description" : "Examples:\n* Deposit\n* CreditCard\n* BSU\n* ASK"
        },
        "AccountName" : {
          "type" : "string",
          "description" : "Friendly name for the account: \"My savings account\", etc."
        },
        "BalanceAvailable" : {
          "type" : "number"
        },
        "AccountOwner" : {
          "type" : "string",
          "description" : "SSN of customer"
        },
        "AccountDetails" : {
          "$ref" : "#/definitions/AccountDetails"
        },
        "TermsAndConditionsId" : {
          "type" : "string",
          "description" : "Reference to terms and conditions for this account (type)."
        }
      }
    },
    "AccountDetails" : {
      "type" : "object",
      "required" : [ "AccountNumber", "BIC", "Created", "Currency", "IBAN" ],
      "properties" : {
        "AccountNumber" : {
          "$ref" : "#/definitions/Account"
        },
        "IBAN" : {
          "type" : "string",
          "description" : "ISO 13616:2007: https://www.iso.org/standard/41031.html"
        },
        "BIC" : {
          "type" : "string",
          "description" : "ISO 9362: https://en.wikipedia.org/wiki/ISO_9362"
        },
        "Currency" : {
          "type" : "string",
          "description" : "Currency: ISO 4217: alpha 3-letter upcase e.g \"EUR\": https://www.iso.org/iso-4217-currency-codes.html"
        },
        "Created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "ISO 8601: www.iso.org/iso/home/standards/iso8601.htm"
        },
        "Updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "ISO 8601: www.iso.org/iso/home/standards/iso8601.htm"
        },
        "AccountInterestDetails" : {
          "$ref" : "#/definitions/AccountInterestDetails"
        }
      },
      "description" : "Details for an Account."
    },
    "AccountInterestDetails" : {
      "type" : "object",
      "required" : [ "AccountNumber", "InterestRate" ],
      "properties" : {
        "AccountNumber" : {
          "type" : "string"
        },
        "InterestRate" : {
          "type" : "number"
        },
        "EarnedInterestToDate" : {
          "type" : "number"
        },
        "AccruedInterestAndFeesToDate" : {
          "type" : "number"
        },
        "FeesToDate" : {
          "type" : "string"
        },
        "AccruedInterestFromLastYear" : {
          "type" : "number"
        }
      }
    },
    "AccountStatement" : {
      "type" : "object",
      "required" : [ "accountNumber", "month", "transactions", "year" ],
      "properties" : {
        "accountNumber" : {
          "type" : "string"
        },
        "year" : {
          "type" : "string"
        },
        "month" : {
          "type" : "string"
        },
        "transactions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Payment"
          }
        }
      },
      "description" : "Monthly account statement."
    },
    "AccountBalance" : {
      "type" : "object",
      "required" : [ "AccountNumber", "AmountAvailable", "Timestamp" ],
      "properties" : {
        "AccountNumber" : {
          "type" : "string"
        },
        "AmountAvailable" : {
          "type" : "number"
        },
        "AmountBook" : {
          "type" : "number"
        },
        "Timestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "ISO 8601: www.iso.org/iso/home/standards/iso8601.htm"
        }
      }
    },
    "AccountPayment" : {
      "type" : "object",
      "required" : [ "Amount", "FromAccount", "PaymentId", "ToAccount" ],
      "properties" : {
        "PaymentId" : {
          "type" : "string"
        },
        "FromAccount" : {
          "type" : "string"
        },
        "ToAccount" : {
          "type" : "string"
        },
        "Amount" : {
          "type" : "string"
        },
        "PaymentDetails" : {
          "type" : "string"
        }
      },
      "description" : "Minimal, initial version. To be replaced by Payment?"
    },
    "AccountTransaction" : {
      "type" : "object",
      "required" : [ "TransactionId" ],
      "properties" : {
        "TransactionId" : {
          "type" : "string"
        },
        "Amount" : {
          "type" : "number"
        },
        "DateBooking" : {
          "type" : "string",
          "format" : "date"
        },
        "DateValue" : {
          "type" : "string",
          "format" : "date"
        },
        "Description" : {
          "type" : "string"
        },
        "Status" : {
          "type" : "string",
          "description" : "\"Booked\", \"Reserved\""
        },
        "MerchantName" : {
          "type" : "string"
        },
        "MCC" : {
          "type" : "string"
        }
      },
      "description" : "Very similar to CardTransaction. Merge?"
    },
    "Card" : {
      "type" : "object",
      "required" : [ "AccountNumber", "CardGroup", "CardId", "CardNumber", "CardStatus", "CardType" ],
      "properties" : {
        "CardId" : {
          "type" : "string"
        },
        "CardType" : {
          "type" : "string",
          "description" : "\"Debit\", \"Credit\""
        },
        "CardNumber" : {
          "type" : "string"
        },
        "CardGroup" : {
          "type" : "string",
          "description" : "\"VISA\", \"MasterCard\", \"American Express\""
        },
        "AccountNumber" : {
          "type" : "string",
          "description" : "Debit cards only"
        },
        "CardStatus" : {
          "type" : "string",
          "description" : "\"Norm\", \"Active\", \"Blocked\""
        },
        "ExpiryDate" : {
          "type" : "string",
          "format" : "date"
        },
        "DebitBalance" : {
          "$ref" : "#/definitions/AccountBalance"
        },
        "CreditBalance" : {
          "$ref" : "#/definitions/CardBalance"
        }
      }
    },
    "CardBalance" : {
      "type" : "object",
      "required" : [ "AmountAvailable", "CardNumber", "Timestamp" ],
      "properties" : {
        "CardNumber" : {
          "type" : "string"
        },
        "Currency" : {
          "type" : "string"
        },
        "CreditLimit" : {
          "type" : "string"
        },
        "AmountAvailable" : {
          "type" : "number"
        },
        "AmountBook" : {
          "type" : "number"
        },
        "Timestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "ISO 8601: www.iso.org/iso/home/standards/iso8601.htm"
        }
      },
      "description" : "Used by Card."
    },
    "CardTransaction" : {
      "type" : "object",
      "required" : [ "TransactionId" ],
      "properties" : {
        "TransactionId" : {
          "type" : "string"
        },
        "Date" : {
          "type" : "string",
          "format" : "date"
        },
        "Amount" : {
          "type" : "number"
        },
        "TransactionDetails" : {
          "type" : "string",
          "description" : "Includes currency rate if applicable"
        },
        "Description" : {
          "type" : "string"
        }
      },
      "description" : "Very similar to AccountTransaction. Can they be merged? Should have MCC codes, etc"
    },
    "CardInvoice" : {
      "type" : "object",
      "required" : [ "Account", "Amount", "Card", "Month", "Transactions", "Year" ],
      "properties" : {
        "Card" : {
          "$ref" : "#/definitions/Card"
        },
        "Year" : {
          "type" : "string",
          "description" : "YYYY"
        },
        "Month" : {
          "type" : "string",
          "description" : "MM, where January is 01"
        },
        "Amount" : {
          "type" : "string"
        },
        "DueDate" : {
          "type" : "string",
          "format" : "date"
        },
        "Account" : {
          "type" : "string",
          "description" : "Account to pay to"
        },
        "KID" : {
          "type" : "string"
        },
        "Transactions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CardTransaction"
          }
        }
      }
    },
    "Payment" : {
      "type" : "object",
      "required" : [ "Amount", "DebitAccount", "PaymentId", "Type" ],
      "properties" : {
        "PaymentId" : {
          "type" : "string"
        },
        "DebitAccount" : {
          "type" : "string"
        },
        "CreditAccount" : {
          "type" : "string"
        },
        "Amount" : {
          "type" : "string"
        },
        "Type" : {
          "type" : "string"
        },
        "Date" : {
          "type" : "string",
          "format" : "date"
        },
        "Status" : {
          "type" : "string"
        }
      },
      "description" : "Details about a payment. Used when returning a list of payments."
    },
    "PaymentInitiation" : {
      "type" : "object",
      "required" : [ "Amount", "CreditAccountNumber", "DebitAccountNumber", "PaymentDate", "Type" ],
      "properties" : {
        "Type" : {
          "type" : "string",
          "description" : "\"KID\", \"Message\", \"Transfer\""
        },
        "DebitAccountNumber" : {
          "type" : "string"
        },
        "CreditAccountNumber" : {
          "type" : "string"
        },
        "Amount" : {
          "type" : "number"
        },
        "PaymentDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "Message" : {
          "type" : "string",
          "description" : "Used for both KID and Message, based on Type."
        },
        "Initiator" : {
          "type" : "string",
          "description" : "\"DNB\", \"Vipps\", \"IKEA\", \"Facebook\", etc"
        }
      },
      "description" : "Three types of payments\n* KID: Customer Identification (2-25 digits, including control digit)\n* Message: Text message describing the payment\n* Transfer: Transfer between two acounts held by the same customer. May also have a message.\n\nNot including the \"straksbetaling\" (imediate payment) flag, as this will be the default."
    },
    "Address" : {
      "type" : "object",
      "required" : [ "PostCity", "PostCode", "PostCountry" ],
      "properties" : {
        "PostalAddressLine1" : {
          "type" : "string",
          "description" : "Street name and number"
        },
        "PostalAddressLine2" : {
          "type" : "string"
        },
        "PostalAddressLine3" : {
          "type" : "string"
        },
        "PostCode" : {
          "type" : "string"
        },
        "PostCity" : {
          "type" : "string"
        },
        "PostCountry" : {
          "type" : "string"
        }
      },
      "description" : "Corresponds with address fields used internally in DNB. "
    },
    "Location" : {
      "type" : "object",
      "required" : [ "id", "latitude", "longditude" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Internal id"
        },
        "latitude" : {
          "type" : "number"
        },
        "longditude" : {
          "type" : "number"
        },
        "description" : {
          "type" : "string",
          "description" : "\"South entrance near elevators\""
        }
      },
      "description" : "Data object for physical location based on GPS coordinates. May be used for something that needs a more specific than an address provides, such as an ATM at a train station. A Location may be used in addition to an Address."
    },
    "Branch" : {
      "type" : "object",
      "required" : [ "Address", "Email", "Id", "Name", "OpeningTimes", "PhoneNumber" ],
      "properties" : {
        "Id" : {
          "type" : "string"
        },
        "Name" : {
          "type" : "string"
        },
        "PhoneNumber" : {
          "type" : "string"
        },
        "Email" : {
          "type" : "string"
        },
        "Address" : {
          "$ref" : "#/definitions/Address"
        },
        "OpeningTimes" : {
          "$ref" : "#/definitions/OpeningTimes"
        },
        "Location" : {
          "$ref" : "#/definitions/Location"
        }
      }
    },
    "ATM" : {
      "type" : "object",
      "required" : [ "Address", "Id", "Name" ],
      "properties" : {
        "Id" : {
          "type" : "string"
        },
        "Name" : {
          "type" : "string"
        },
        "Address" : {
          "$ref" : "#/definitions/Address"
        },
        "Location" : {
          "$ref" : "#/definitions/Location"
        },
        "OpeningTimes" : {
          "$ref" : "#/definitions/OpeningTimes"
        },
        "Currencies" : {
          "type" : "array",
          "description" : "Array of ISO 4217: alpha 3-letter upcase e.g \"EUR\": https://www.iso.org/iso-4217-currency-codes.html",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "OpeningTimes" : {
      "type" : "array",
      "description" : "Opening times for a branch, ATM, or something else.\nIf open 24 hours, use \"00:00\" both for OpeningTime and CloseTime.",
      "items" : {
        "type" : "object",
        "properties" : {
          "Day" : {
            "type" : "integer",
            "description" : "1: Monday, 2: Tuesday, etc"
          },
          "OpeningTime" : {
            "type" : "string",
            "description" : "\"09:00\""
          },
          "CloseTime" : {
            "type" : "string",
            "description" : "\"17:00\""
          }
        }
      }
    },
    "Error" : {
      "type" : "object",
      "required" : [ "ErrorMessage" ],
      "properties" : {
        "ErrorNumber" : {
          "type" : "number",
          "description" : "DNB's error number. HTTP error implicit."
        },
        "ErrorMessage" : {
          "type" : "string",
          "description" : "Explanation"
        }
      }
    }
  }
}