{
  "swagger" : "2.0",
  "info" : {
    "description" : "**WORK IN PROGRESS! **\n\nThis is a working document, an informal draft for API \"note-taking\", evaluation of API-related tools, etc. Contains several errors, contradictions and mistakes. Some Wikipedia texts added as placeholders/examples.\n\nHTTP response codes\n\n* Wikipedia: https://en.wikipedia.org/wiki/List_of_HTTP_status_codes\n* W3C: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\n\n\n| HTTP method | Success  | Fail  |\n| -------- | -------- | -------- |\n| GET     | 200     | 404, 4XX, 5XX     |\n| POST     | 200, 201     | 400, 404, 4XX, 5XX     |\n| PUT | 204 | 400, 404, 4XX, 5XX |\n\n",
    "version" : "1.0.5",
    "title" : "API AWS",
    "termsOfService" : "",
    "contact" : { }
  },
  "host" : "a1r3mp0.restletmocks.net",
  "schemes" : [ "https" ],
  "paths" : {
    "/api/key" : {
      "get" : {
        "tags" : [ "API" ],
        "summary" : "Get new API key",
        "description" : "Simplified example. Requires a method of identification, the minimum being Facebook or Google OAuth. ",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "string",
              "example" : "Ok, you're in."
            }
          },
          "400" : {
            "description" : "Status 400"
          },
          "401" : {
            "description" : "Status 401"
          },
          "429" : {
            "description" : "Status 429"
          }
        }
      }
    },
    "/api/key/{apikey}" : {
      "get" : {
        "tags" : [ "API" ],
        "summary" : "Get details of API key",
        "description" : "For now: Also returns some housekeeping details, as an example. ",
        "parameters" : [ {
          "name" : "apikey",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "object",
              "properties" : {
                "customer" : {
                  "$ref" : "#/definitions/Customer"
                },
                "balance" : {
                  "type" : "string",
                  "description" : "Some details of current balance, if relevant to the subscription plan"
                },
                "invoice" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string"
                    },
                    "date" : {
                      "type" : "string",
                      "format" : "date"
                    },
                    "amount" : {
                      "type" : "integer"
                    },
                    "paid" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "API" ],
        "summary" : "Delete API key",
        "parameters" : [ {
          "name" : "apikey",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Status 204"
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "apikey",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Example: fa01s-21res-qq21p-mq1p6"
      } ]
    },
    "/api/ratelimit" : {
      "get" : {
        "tags" : [ "API" ],
        "summary" : "Rate limit for current user",
        "description" : "How am I doing? Am I near my limit? ",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      }
    },
    "/api/whoami" : {
      "get" : {
        "tags" : [ "API" ],
        "summary" : "Who am I?",
        "description" : "All details of current API user account:\n* Contact details\n* API key details\n* Payment/plan/subscription\n* Throttling info\n* etc",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Details of current API key holder.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "404" : {
            "description" : "Well, that's a surprise"
          },
          "418" : {
            "description" : "I'm a little teapot"
          }
        }
      }
    },
    "/api/ping" : {
      "get" : {
        "tags" : [ "API" ],
        "summary" : "API ping",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Hello!"
          },
          "404" : {
            "description" : "Server up, but not for you."
          },
          "429" : {
            "description" : "Yes, yes, yes!"
          }
        }
      }
    },
    "/customers/{customerId}" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "Get basic customer information.",
        "description" : "",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/Customer"
            }
          },
          "404" : {
            "description" : "No such customerId found."
          }
        }
      },
      "post" : {
        "tags" : [ "Customers" ],
        "summary" : "Create new customer",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Customer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Welcome!"
          },
          "400" : {
            "description" : "Status 400"
          },
          "409" : {
            "description" : "Conflicting customerId: Already exists."
          }
        }
      },
      "delete" : {
        "tags" : [ "Customers" ],
        "summary" : "Delete customer",
        "parameters" : [ ],
        "responses" : {
          "204" : {
            "description" : "Status 204"
          }
        }
      },
      "parameters" : [ {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "social security number (personnummer), 9 digits. Example: 123456789"
      } ]
    },
    "/customers/{customerId}/profile" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "Get customer profile",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "post" : {
        "tags" : [ "Customers" ],
        "summary" : "Create/update customer profile",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "delete" : {
        "tags" : [ "Customers" ],
        "summary" : "Delete customer profile",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/customers/{customerId}/about" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "Get detailed customer information.",
        "description" : "Nice if this is different from /customers/{customerId}.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/Customer"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Customers" ],
        "summary" : "Update customer details",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Customer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "social security number (personnummer), 9 digits. Example: 123456789"
      } ]
    },
    "/customers/{customerId}/score" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "Get customer score",
        "description" : "Customer score with all details.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/CustomerScore"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Customers" ],
        "summary" : "Create/update customer score",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerScore"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "delete" : {
        "tags" : [ "Customers" ],
        "summary" : "Delete customer score",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/customers/{customerId}/accounts" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "Accounts overview (list of accounts).",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Account"
              }
            }
          },
          "404" : {
            "description" : "No accounts."
          }
        }
      },
      "parameters" : [ {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "social security number (personnummer), 9 digits. Example: 123456789"
      } ]
    },
    "/accounts/{account}" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get account details",
        "description" : "Maybe add query parameters for filtering? '?type=stocks', etc",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          },
          "401" : {
            "description" : "Status 401"
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "post" : {
        "tags" : [ "Accounts" ],
        "summary" : "Create account",
        "description" : "Maybe send partial Account object (without account number) in request?",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Account"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "delete" : {
        "tags" : [ "Accounts" ],
        "summary" : "Delete account",
        "description" : "Maybe return HTTP 2XX 'marked for deletion', as the account will not be deleted immediately?",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Deleted"
          },
          "401" : {
            "description" : ""
          },
          "404" : {
            "description" : "Account does not exist."
          },
          "500" : {
            "description" : "I'm afraid I can't do that."
          }
        }
      },
      "parameters" : [ {
        "name" : "account",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Account number, 11 digits."
      } ]
    },
    "/accounts/{account}/name" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get account name",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          },
          "404" : {
            "description" : "Account not found."
          }
        }
      },
      "post" : {
        "tags" : [ "Accounts" ],
        "summary" : "Change account name",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "delete" : {
        "tags" : [ "Accounts" ],
        "summary" : "Delete account name",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "account",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Account number, 11 digits."
      } ]
    },
    "/accounts/{account}/balance" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get account balance",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Balance"
            }
          },
          "401" : {
            "description" : "No balance for you."
          },
          "404" : {
            "description" : "Account not found."
          },
          "417" : {
            "description" : "Expectation Failed: Requires prior (paranormal) transfer of customer's expectation (haha)."
          }
        }
      },
      "parameters" : [ {
        "name" : "account",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Account number, 11 digits."
      } ]
    },
    "/accounts/{account}/safetospend" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get \"safe to spend\" amount",
        "description" : "The current balance, minus known outgoing transactions, plus known incoming transactions. ",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Here it is! Don't spend it all at once.",
            "schema" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "401" : {
            "description" : "Hmmm, not really your account, is it?"
          }
        }
      },
      "parameters" : [ {
        "name" : "account",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Account number, 11 digits."
      } ]
    },
    "/accounts/{account}/statement/{year}/{month}" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get account statement",
        "description" : "Account statement for specified account, year and month. Some meta data, and a list of all transactions. ",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Accountstatement"
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "account",
        "in" : "path",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "year",
        "in" : "path",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "month",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/accounts/{account}/transactionlist" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get transactionlist for one account",
        "description" : "Supports pagination: pagesize and pagenumber,",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pagesize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pagenumber",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Transaction"
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "account",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/accounts/{account}/transactionlist/{year}/{month}" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "List of transactions for one month",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Transaction"
              }
            }
          },
          "400" : {
            "description" : "Invalid parameters?"
          },
          "401" : {
            "description" : "Status 401"
          },
          "404" : {
            "description" : "No transactions."
          }
        }
      },
      "parameters" : [ {
        "name" : "account",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Account number, 11 digits. Example: 12345678910"
      }, {
        "name" : "year",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Year, 4 digits. Example: 2017"
      }, {
        "name" : "month",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Month, 2 digits (January is 01). Example: 01"
      } ]
    },
    "/account/deposit/{ownerid}/{lenderid}" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get information about deposit account",
        "description" : "Need to provide more than an Account object, but then again this is a draft/note only.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Accounts" ],
        "summary" : "Open deposit acount",
        "description" : "For now: Using Account object with SSIDs of tennant and owner. \n\nRequired:\n* Electronic copy of signed rental agreement\n* The address of the apartment (or license details for car, boat, etc)\n* Name, SSN, email, phone of the lender (or is SSN sufficient, at least for existing DNB customers?)\n\nUse a Customer object?\n\nDNB deposit account: https://www.dnb.no/privat/nettbank-mobil-og-kort/konto/depositumskonto.html ",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Account"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "delete" : {
        "tags" : [ "Accounts" ],
        "summary" : "Delete deposit account",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Account deleted"
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "ownerid",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Personal id number (SSN) of the \"owner\" for the artifact this deposit account is security for, 11 digits."
      }, {
        "name" : "lenderid",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Personal id number (SSN) of the \"lender\" for the artifact this deposit account is security for, 11 digits."
      } ]
    },
    "/transactions/{transactionid}" : {
      "get" : {
        "tags" : [ "Transactions" ],
        "summary" : "Get transaction details",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Transaction"
            }
          },
          "401" : {
            "description" : "Status 401"
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "post" : {
        "tags" : [ "Transactions" ],
        "summary" : "Create transaction",
        "description" : "TBD. Needs a lot more details. Just a note, really.",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Transaction"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "delete" : {
        "tags" : [ "Transactions" ],
        "summary" : "Delete/stop transaction",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          },
          "401" : {
            "description" : "Not for you."
          },
          "403" : {
            "description" : "Too late?"
          }
        }
      },
      "parameters" : [ {
        "name" : "transactionid",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "id"
      } ]
    },
    "/transactions/category/{mcc}/{account}" : {
      "get" : {
        "tags" : [ "Transactions" ],
        "summary" : "Get transactions with code MCC for one account",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Transaction"
              }
            }
          },
          "401" : {
            "description" : "Status 401"
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "mcc",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "MCC: Merchant Category Code: https://en.wikipedia.org/wiki/Merchant_category_code"
      }, {
        "name" : "account",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Account number, 11 digits."
      } ]
    },
    "/transactions/sepa" : {
      "post" : {
        "tags" : [ "Transactions" ],
        "summary" : "Create new SEPA transfer",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SEPArequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/SEPAresponse"
            }
          }
        }
      }
    },
    "/loans/{loanid}" : {
      "get" : {
        "tags" : [ "Loans" ],
        "summary" : "Details of this loan",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Loan"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Loans" ],
        "summary" : "Delete loan",
        "description" : "Downpayment first.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "loanid",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/loans/apply" : {
      "post" : {
        "tags" : [ "Loans" ],
        "summary" : "Apply for a new loan",
        "description" : "Need to POST quite a bit of data, and also handle AML, KYC, etc",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "customer",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "loan",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "Loan details"
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      }
    },
    "/loans/downpay/{loanid}" : {
      "post" : {
        "tags" : [ "Loans" ],
        "summary" : "Downpay entire loan (settle).",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "loanid",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "The loan to downpay."
      } ]
    },
    "/preapproval/details/{loanid}" : {
      "get" : {
        "tags" : [ "Loans" ],
        "summary" : "Get details of preapproval",
        "description" : "For now: Returns a Loan object.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Loan"
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "loanid",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/preapproval/{personnr}/{desiredamount}" : {
      "get" : {
        "tags" : [ "Loans" ],
        "summary" : "Check if the person has approval",
        "description" : "Optional parameters: County (kommunenummer), gnr (gårdsnummer) and bnr (bruksnummer ) may be used to specify which property the preapproval is being checked for. This may allow DNB to find out that the preapproval holder is in a bidding process.",
        "parameters" : [ {
          "name" : "county",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Number of the county (kommune).",
          "x-example" : "1865"
        }, {
          "name" : "gnr",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Gårdsnummer.",
          "x-example" : "55"
        }, {
          "name" : "bnr",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Bruksnummer.",
          "x-example" : "34"
        } ],
        "responses" : {
          "200" : {
            "description" : "Sufficient funds"
          },
          "401" : {
            "description" : "Status 401"
          },
          "404" : {
            "description" : "This person does not have financing for the specified amount."
          },
          "429" : {
            "description" : "To prevent repeated attempts at guessing the \"desiredamount\"."
          }
        }
      },
      "post" : {
        "tags" : [ "Loans" ],
        "summary" : "Apply for preapproval",
        "description" : "For now apply for a specified amount only. If the amouhnt specified is 0 (zero), the application will be treated as for the maximum possible amount.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "personnr",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "11-digit personal id number"
      }, {
        "name" : "desiredamount",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "How much?"
      } ]
    },
    "/preapproval/delete/{personnr}" : {
      "delete" : {
        "tags" : [ "Loans" ],
        "summary" : "Delete preapproval",
        "description" : "When a loan is issued, either by DNB or another bank, the preapproval should be deleted.\nSeparate method to avoid specifying amount. \"Personnr\" is sufficient.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          },
          "401" : {
            "description" : "Status 401"
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "personnr",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/currency/list/{base}" : {
      "get" : {
        "tags" : [ "Currency" ],
        "summary" : "Get a list rates for the most common currencies, with a specified base",
        "description" : "Suitable for making a table or similar.\n\n```\n{\n    disclaimer: \"http://api.dnb.no/diclaimer_goes_here/\",\n    license: \"http://api.dnb.no/license_goes_here/\",\n    timestamp: 1504548341,\n    base: \"NOK\",\n    rates: {\n        AED: 3.672538,\n        AFN: 66.809999,\n        ALL: 125.716501,\n        AMD: 484.902502,\n        ANG: 1.788575,\n        AOA: 135.295998,\n        ARS: 9.750101,\n        AUD: 1.390866,\n        /* ... */\n    }\n}\n```",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "string",
              "example" : "AED: 3.672538"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "base",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "\"Home\" currency. ISO 4217: alpha 3-letter upcase e.g EUR"
      } ]
    },
    "/currency/convert/{base}/{currency}/{amount}" : {
      "get" : {
        "tags" : [ "Currency" ],
        "summary" : "Convert amount from CUR1 to CUR2",
        "description" : "Quite basic for now. Possibly add parameters for markup/margin, specify a date, find min/max in an interval (separate method?), etc.\n\nTime series is a likely feature - see OXR's API: https://docs.openexchangerates.org/docs/time-series-json\n\n```\n{\n    \"disclaimer\": \"https://openexchangerates.org/terms/\",\n    \"license\": \"https://openexchangerates.org/license/\",\n    \"start_date\": \"2013-01-01\",\n    \"end_date\": \"2013-01-31\",\n    \"base\": \"AUD\",\n    \"rates\": {\n        \"2013-01-01\": {\n            \"BTC\": 0.0778595876,\n            \"EUR\": 0.785518,\n            \"HKD\": 8.04136\n        },\n        \"2013-01-02\": {\n            \"BTC\": 0.0789400739,\n            \"EUR\": 0.795034,\n            \"HKD\": 8.138096\n        },\n        \"2013-01-03\": {\n            \"BTC\": 0.0785299961,\n            \"EUR\": 0.80092,\n            \"HKD\": 8.116954\n        },\n        /* ... */\n    }\n\n```",
        "parameters" : [ {
          "name" : "date",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "date",
          "description" : "End of day."
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "base",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "ISO 4217: alpha 3-letter upcase e.g EUR"
      }, {
        "name" : "currency",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "ISO 4217: alpha 3-letter upcase e.g EUR"
      }, {
        "name" : "amount",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "format" : "int32"
      } ]
    },
    "/insurance/{policynumber}" : {
      "get" : {
        "tags" : [ "Insurance" ],
        "summary" : "Get insurance details",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Insurance"
            }
          },
          "401" : {
            "description" : "Status 401"
          },
          "404" : {
            "description" : "Unknown policy number."
          }
        }
      },
      "post" : {
        "tags" : [ "Insurance" ],
        "summary" : "Update insurance details",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Insurance"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Update successful."
          },
          "401" : {
            "description" : "Status 401"
          },
          "404" : {
            "description" : "Status 404"
          },
          "409" : {
            "description" : "Status 409"
          }
        }
      },
      "delete" : {
        "tags" : [ "Insurance" ],
        "summary" : "Delete an insurance",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "policynumber",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/insurance/{policynumber}/claims" : {
      "get" : {
        "tags" : [ "Insurance" ],
        "summary" : "Get list of claims",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Insuranceclaim"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "policynumber",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/insurance/{policynumber}/claims/{claimid}" : {
      "get" : {
        "tags" : [ "Insurance" ],
        "summary" : "Get details of claim",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Insuranceclaim"
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "policynumber",
        "in" : "path",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "claimid",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/insurance/claim" : {
      "post" : {
        "tags" : [ "Insurance" ],
        "summary" : "Make new insurance claim",
        "description" : "Refers to object \"Insuranceclaim\", which is a very simplified representation.",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Insuranceclaim"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Claim received (not approved quite yet, though)."
          },
          "400" : {
            "description" : "Status 400"
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      }
    },
    "/insurance/car/{licensenumber}" : {
      "get" : {
        "tags" : [ "Insurance" ],
        "summary" : "Get info about a car's insurance",
        "description" : "Check if a car is insured: /insurance/car/AB12345",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Insurance"
            }
          },
          "404" : {
            "description" : "No insurance found."
          }
        }
      },
      "post" : {
        "tags" : [ "Insurance" ],
        "summary" : "Get insurance offer",
        "description" : "Needs a lot of input. https://www.dnb.no/privat/forsikring/bilforsikring.html",
        "consumes" : [ ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Offer provided.",
            "schema" : {
              "$ref" : "#/definitions/Insurance"
            }
          },
          "400" : {
            "description" : "Status 400"
          },
          "409" : {
            "description" : "Recently sent an offer."
          }
        }
      },
      "parameters" : [ {
        "name" : "licensenumber",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "AB12345"
      } ]
    },
    "/insurance/car/offer/{licensenumber}" : {
      "post" : {
        "tags" : [ "Insurance" ],
        "summary" : "Get insurance offer",
        "description" : "Needs a lot of input. https://www.dnb.no/privat/forsikring/bilforsikring.html\n\nFor now: Assume the attributes of Car object are sufficient.",
        "consumes" : [ ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Car"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Insuranceoffer"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "licensenumber",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "AB12345"
      } ]
    },
    "/insurance/car/towingservice/{latitude}/{longditude}" : {
      "get" : {
        "tags" : [ "Insurance" ],
        "summary" : "Get nearest car towing service",
        "description" : "For now: Return a list of Locations. Later: Array of object representing car towing services.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Location"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "latitude",
        "in" : "path",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "longditude",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/insurance/car/service/{latitude}/{longditude}" : {
      "get" : {
        "tags" : [ "Insurance" ],
        "summary" : "Get nearest car service",
        "description" : "Based on the specified location: List the nearest car service Locations, sorted by distance. Ideally: Also provide references to details about each service Location (contact info, opening hours, etc).",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Location"
              }
            }
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "parameters" : [ {
        "name" : "latitude",
        "in" : "path",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "longditude",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/insurance/weatheralert/{latitude}/{longditude}" : {
      "get" : {
        "tags" : [ "Insurance" ],
        "summary" : "Check if there is a weather alert",
        "parameters" : [ {
          "name" : "radius",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Radius in km.",
          "x-example" : "50"
        } ],
        "responses" : {
          "200" : {
            "description" : "Yes there is, and here are the details.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "404" : {
            "description" : "No weather alert."
          }
        }
      },
      "parameters" : [ {
        "name" : "latitude",
        "in" : "path",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "longditude",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/location/atm/{latitude}/{longditude}/" : {
      "get" : {
        "tags" : [ "Location" ],
        "summary" : "Nearest ATM",
        "description" : "If no details (as for now): Assume ATM is open 24h.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "List of minibank locations",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "latitude",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Current latitude. Example: 37.4238253802915"
      }, {
        "name" : "longditude",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Current longditude. Example: -122.0842499"
      } ]
    },
    "/location/branch/findbyaddress" : {
      "get" : {
        "tags" : [ "Location" ],
        "summary" : "Find nearest branch by address",
        "description" : "For now: Assume geocoding functionality similar to Google Maps: https://developers.google.com/maps/documentation/geocoding/intro",
        "parameters" : [ {
          "name" : "address",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "For now: Assume geocoding functionality similar to Google Maps: https://developers.google.com/maps/documentation/geocoding/intro"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Location"
            }
          }
        }
      }
    },
    "/location/branch/findbycoordinates/{latitude}/{longditude}" : {
      "get" : {
        "tags" : [ "Location" ],
        "summary" : "Nearest branch office",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "latitude",
        "in" : "path",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "longditude",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/location/branch/openinghours/{branchid}" : {
      "get" : {
        "tags" : [ "Location" ],
        "summary" : "Opening hours of a branch",
        "description" : "Response may not be ideal - input is welcome. Google Places' ```opening_hours```may be useful: https://developers.google.com/places/web-service/details",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "day" : {
                    "type" : "integer",
                    "description" : "Monday: 1, Tuesday: 2, Wednesday: 3, Thursday: 4, Friday: 5, Saturday: 6, Sunday: 7"
                  },
                  "open_hour" : {
                    "type" : "integer",
                    "description" : "The \"07\" in \"07:30\"."
                  },
                  "open_minute" : {
                    "type" : "integer",
                    "description" : "The \"30\" in \"07:30\"."
                  },
                  "close_hour" : {
                    "type" : "integer",
                    "description" : "The \"17\" in \"17:30\"."
                  },
                  "close_minutes" : {
                    "type" : "string",
                    "description" : "The \"30\" in \"17:30\"."
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Location" ],
        "summary" : "Update branch opening hours",
        "description" : "Request data TBD",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "branchid",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/location/branch/details/{branchid}" : {
      "get" : {
        "tags" : [ "Location" ],
        "summary" : "Branch details",
        "description" : "Returns an array of strings, which may include all kinds of iformation (text, URLs, media, etc).",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Location" ],
        "summary" : "Update branch details",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "branchid",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Id of branch"
      } ]
    },
    "/stocks/{ticker}" : {
      "get" : {
        "tags" : [ "Stocks" ],
        "summary" : "Get info about stock with ticker",
        "description" : "Key information, such as: Company name, organization number, contact information, etc.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "ticker",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/stocks/price/{ticker}/{timestamp}" : {
      "get" : {
        "tags" : [ "Stocks" ],
        "summary" : "Get price of stock",
        "description" : "For now: Returns a number. ",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "number"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "ticker",
        "in" : "path",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "timestamp",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "format" : "date-time"
      } ]
    },
    "/vipps/settlement/{settlementid}/user/{userid}" : {
      "get" : {
        "tags" : [ "Vipps" ],
        "summary" : "Details of user in settlement",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Maybe just a Person, as he/she may not be a customer with us.",
            "schema" : {
              "$ref" : "#/definitions/Customer"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "settlementid",
        "in" : "path",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "userid",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/vipps/settlement/{settlementid}/user" : {
      "post" : {
        "tags" : [ "Vipps" ],
        "summary" : "Add user to settlement",
        "description" : "Should POST a Person, not Customer",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Customer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "settlementid",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/vipps/settlement/{settlementid}/settle" : {
      "get" : {
        "tags" : [ "Vipps" ],
        "summary" : "Settle, pay everyone",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "settlementid",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/vipps/settlement/{settlementid}/expense" : {
      "get" : {
        "tags" : [ "Vipps" ],
        "summary" : "Details of expense",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "post" : {
        "tags" : [ "Vipps" ],
        "summary" : "New expense",
        "description" : "Date, who, amount, description, etc",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "delete" : {
        "tags" : [ "Vipps" ],
        "summary" : "Delete expense from settlement",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "settlementid",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/vipps/settlement/{settlementid}" : {
      "get" : {
        "tags" : [ "Vipps" ],
        "summary" : "Details of a settlement",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Created, status, name, owners/admins, list of expenses",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Vipps" ],
        "summary" : "Delete settlement",
        "description" : "(Not possible in Vipps today)",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "settlementid",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/vipps/settlement/create" : {
      "post" : {
        "tags" : [ "Vipps" ],
        "summary" : "Create a new (empty) settlement",
        "description" : "date, name, participants, currency(?)",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      }
    },
    "/vipps/payments" : {
      "post" : {
        "tags" : [ "Vipps" ],
        "summary" : "Make new Vipps payment",
        "description" : "From 8.3.2: https://www.vipps.no/portalfront/vipps/nedlast/eCommerce_API_v1.2.pdf",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VippsPaymentRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/VippsPaymentResponse"
            }
          }
        }
      }
    },
    "/vipps/merchants/{latitude}/{longditude}" : {
      "get" : {
        "tags" : [ "Vipps" ],
        "summary" : "Nearby Vipps merchants",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Customer"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "latitude",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Current latitude. Example: 37.4238253802915"
      }, {
        "name" : "longditude",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Current longditude. Example: -122.0842499"
      } ]
    },
    "/vipps/invoice/{customerId}" : {
      "get" : {
        "tags" : [ "Vipps" ],
        "summary" : "Get Vipps invoice details",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          },
          "404" : {
            "description" : "Status 404"
          }
        }
      },
      "post" : {
        "tags" : [ "Vipps" ],
        "summary" : "Create new Vipps invoice customer",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Customer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          },
          "400" : {
            "description" : "Status 400"
          }
        }
      },
      "parameters" : [ {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Organization number, 9 digits. Example: 123456789"
      } ]
    },
    "/vipps/customer" : {
      "post" : {
        "tags" : [ "Vipps" ],
        "summary" : "Create new Vipps customer",
        "description" : "Phone number, personal id number, name, card number, account number",
        "consumes" : [ ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Customer"
            }
          }
        }
      }
    },
    "/vipps/payments/{orderId}/serialNumber/{merchantSerialNumber}/details" : {
      "get" : {
        "tags" : [ "Vipps" ],
        "summary" : "Get payment details",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Vippstransaction"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "orderId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "merchantSerialNumber",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/reports/turnovers/{year}/{month}/{customerId}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Turnovers report.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "year",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Year, 4 digits. Example: 2017"
      }, {
        "name" : "month",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Month, 2 digits (January is 01). Example: 01"
      }, {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Organization number, 9 digits. Example: 123456789"
      } ]
    },
    "/reports/transactions/{year}/{month}/{customerId}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Transaction report.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "{\n    \"transactions\": [\n        {\n            \"account_balance\": 12325,\n            \"amount\": -20,\n            \"created\": \"2016-08-05T08:00:00Z\",\n            \"currency\": \"NOK\",\n            \"description\": \"DNB Børsbaren\",\n            \"id\": \"<id>\",\n            \"merchant_id\": \"<id>\",\n            \"notes\": \"Dobbel espresso\",\n            \"settled\": \"2016-08-05T08:00:00Z \",\n            \"category\": \"restaurant\"\n        },\n        {\n            \"account_balance\": 12305,\n            \"amount\": -20,\n            \"created\": \"2016-08-05T08:05:00Z\",\n            \"currency\": \"NOK\",\n            \"description\": \"DNB Børsbaren\",\n            \"id\": \"<id>\",\n            \"merchant_id\": \"<id>\",\n            \"notes\": \"Dobbel espresso\",\n            \"settled\": \"2016-08-05T08:05:00Z \",\n            \"category\": \"restaurant\"\n        },\n    ]\n}",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "year",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Year, 4 digits. Example: 2017"
      }, {
        "name" : "month",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Month, 2 digits (January is 01). Example: 01"
      }, {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "social security number (personnummer), 9 digits. Example: 123456789"
      } ]
    },
    "/reports/system/{customerId}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "System report.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Organization number, 9 digits. Example: 123456789"
      } ]
    },
    "/reports/solidity/{customerId}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Solidity report.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Organization number, 9 digits. Example: 123456789"
      } ]
    },
    "/reports/roles/{year}/{customerId}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Roles report.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "year",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Year, 4 digits. Example: 2017"
      }, {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Organization number, 9 digits. Example: 123456789"
      } ]
    },
    "/reports/revenues/{year}/{month}/{customerId}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Revenues report.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "year",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Year, 4 digits. Example: 2017"
      }, {
        "name" : "month",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Month, 2 digits (January is 01). Example: 01"
      }, {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Organization number, 9 digits. Example: 123456789"
      } ]
    },
    "/reports/profitability/{year}/{month}/{customerId}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Profitability report.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "year",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Year, 4 digits. Example: 2017"
      }, {
        "name" : "month",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Month, 2 digits (January is 01). Example: 01"
      }, {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Organization number, 9 digits. Example: 123456789"
      } ]
    },
    "/reports/products/{customerId}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Products report.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Organization number, 9 digits. Example: 123456789"
      } ]
    },
    "/reports/organization/{customerId}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Organization report.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Report"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Organization number, 9 digits. Example: 123456789"
      } ]
    },
    "/reports/notifications/{year}/{month}/{customerId}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Notifications report.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Report"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "year",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Year, 4 digits. Example: 2017"
      }, {
        "name" : "month",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Month, 2 digits (January is 01). Example: 01"
      }, {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Organization number, 9 digits. Example: 123456789"
      } ]
    },
    "/reports/loanpayments/{year}/{month}/{customerId}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Loan payments report.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Report"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "year",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Year, 4 digits. Example: 2017"
      }, {
        "name" : "month",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Month, 2 digits (January is 01). Example: 01"
      }, {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Organization number, 9 digits. Example: 123456789"
      } ]
    },
    "/reports/liquiditystatus/{year}/{month}/{customerId}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Liquidity status for year, month and company.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Report"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "year",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Year, 4 digits. Example: 2017"
      }, {
        "name" : "month",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Month, 2 digits (January is 01). Example: 01"
      }, {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Organization number, 9 digits. Example: 123456789"
      } ]
    },
    "/reports/liquidityprognosis/{year}/{month}/{customerId}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Liquidity prognosis for year, month and copmpany.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Report"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Reports" ],
        "summary" : "Delete prognosis.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "year",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Year, 4 digits. Example: 2017"
      }, {
        "name" : "month",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Month, 2 digits (January is 01). Example: 01"
      }, {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Organization number, 9 digits. Example: 123456789"
      } ]
    },
    "/reports/liquidity/{year}/{month}/{customerId}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Liquidity for year, month and company.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Report"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "year",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Year, 4 digits. Example: 2017"
      }, {
        "name" : "month",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Month, 2 digits (January is 01). Example: 01"
      }, {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Organization number, 9 digits. Example: 123456789"
      } ]
    },
    "/reports/invoices/{customerId}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Invoices report.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Report"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Organization number, 9 digits. Example: 123456789"
      } ]
    },
    "/reports/expenses/{year}/{month}/{customerId}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Expenses report.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Report"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "year",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Year, 4 digits. Example: 2017"
      }, {
        "name" : "month",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Month, 2 digits (January is 01). Example: 01"
      }, {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Organization number, 9 digits. Example: 123456789"
      } ]
    },
    "/reports/chats/{year}/{month}/{customerId}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Chats report.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Report"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "year",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Year, 4 digits. Example: 2017"
      }, {
        "name" : "month",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Month, 2 digits (January is 01). Example: 01"
      }, {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Organization number, 9 digits. Example: 123456789"
      } ]
    },
    "/reports/calendars/{year}/{month}/{customerId}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Calendar report.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Report"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "year",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Year, 4 digits. Example: 2017"
      }, {
        "name" : "month",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Month, 2 digits (January is 01). Example: 01"
      }, {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Organization number, 9 digits. Example: 123456789"
      } ]
    },
    "/reports/benchmarks/{year}/{month}/{customerId}/{customerIdCompare}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Benchmark report.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "What to compare: revenue, profitability, liquidity",
          "x-example" : "revenue"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Report"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "year",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Year, 4 digits. Example: 2017"
      }, {
        "name" : "month",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Month, 2 digits (January is 01). Example: 01"
      }, {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Organization number, 9 digits. Example: 123456789"
      }, {
        "name" : "customerIdCompare",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Organization number of company to to compare with, 9 digits. Example: 123456789"
      } ]
    },
    "/reports/behaviour/{customerId}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Behaviour report.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Report"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Reports" ],
        "summary" : "Delete advices.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Organization number, 9 digits. Example: 123456789"
      } ]
    },
    "/reports/annual/{year}/{customerId}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Annual report for year and company,",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Report found.",
            "schema" : {
              "$ref" : "#/definitions/Annualreport"
            }
          },
          "404" : {
            "description" : "Annual report not found."
          }
        }
      },
      "parameters" : [ {
        "name" : "year",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Year, 4 digits. Example: 2017"
      }, {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Organization number, 9 digits. Example: 123456789"
      } ]
    },
    "/reports/advices/{year}/{month}/{customerId}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Advices report.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Advice"
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Reports" ],
        "summary" : "Delete advices",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "year",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Year, 4 digits. Example: 2017"
      }, {
        "name" : "month",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Month, 2 digits (January is 01). Example: 01"
      }, {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Organization number, 9 digits. Example: 123456789"
      } ]
    },
    "/reports/accounts/{customerId}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Accounts report.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Different use than /accounts?",
            "schema" : {
              "$ref" : "#/definitions/Report"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Organization number, 9 digits. Example: 123456789"
      } ]
    },
    "/saf-t/{customerId}/{type}" : {
      "get" : {
        "tags" : [ "SAF-T" ],
        "summary" : "Get SAF-T file for a company of type",
        "description" : "",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/SAFTfile"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "SAF-T" ],
        "summary" : "Send new SAF-T file of type",
        "description" : "",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SAFTfile"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Organization number, 9 digits. Example: 123456789"
      }, {
        "name" : "type",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Type of SAF-T file"
      } ]
    },
    "/saf-t/{customerId}" : {
      "get" : {
        "tags" : [ "SAF-T" ],
        "summary" : "Get SAF-T file for a company",
        "description" : "",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/SAFTfile"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "SAF-T" ],
        "summary" : "Send new SAF-T file",
        "description" : "",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SAFTfile"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "parameters" : [ {
        "name" : "customerId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Organization number, 9 digits. Example: 123456789"
      } ]
    }
  },
  "definitions" : {
    "Customer" : {
      "type" : "object",
      "required" : [ "City", "Country", "Id", "Name", "Postcode" ],
      "properties" : {
        "Id" : {
          "type" : "string",
          "description" : "Person: Personal number, 11 digits.\nCompany: Organization number, 9 digits."
        },
        "status" : {
          "type" : "string",
          "description" : "Active, pending, closed, etc"
        },
        "program" : {
          "type" : "string",
          "description" : "SAGA, etc"
        },
        "Name" : {
          "type" : "string",
          "description" : "Person: Rune Bjerke.\nCompany: DNB"
        },
        "Address" : {
          "type" : "string",
          "description" : "Street address."
        },
        "Postcode" : {
          "type" : "string",
          "description" : "4 digits if in Norway,"
        },
        "City" : {
          "type" : "string",
          "description" : "Oslo"
        },
        "Country" : {
          "type" : "string",
          "description" : "\"NO\". http://www.iso.org/iso/country_codes.htm"
        },
        "Email" : {
          "type" : "string",
          "description" : "example@example.com"
        },
        "Phone" : {
          "type" : "string",
          "description" : "+47 04800"
        },
        "Website" : {
          "type" : "string",
          "description" : "dnb.no"
        },
        "welcomepackage" : {
          "type" : "string",
          "description" : "Id/tracking details for welcome package"
        },
        "Notes (placeholder)" : {
          "type" : "string",
          "description" : "{\n    \"email\": \"rune.bjerke@dnb.no\",\n    \"first_name\": \"Rune\",\n    \"last_name\": \"Bjerke\",\n    \"gender\": \"m\",\n    \"adr_street\": \"Dronning Eufemias gate 30\",\n    \"adr_post_code\": \"0191\",\n    \"adr_city\": \"Oslo\",\n    \"adr_country\": \"NO\",\n    “phone\": \"+47 04800\",\n    \"birthday\": \"1960-06-17\",\n    \"created\": \"2015-07-01T10:42:00+01:00\",     \"updated\": \"2015-10-01T10:42:00+01:00\",\n}"
        }
      },
      "description" : "Draft, needs update from actual properties below.\n\nAlso doubles as \"Person\", i.e: Not all Customer objects are DNB customers. A Customer is to be seen as a human person with certain attributes.\n\n```\n{\n\t\"id\": \"17066099999\",\n\t“email”: \"rune.bjerke@dnb.no\", \n\t“first_name”: “Rune”, \n\t“last_name”: “Bjerke”, \n\t“gender”: “m”, \n\t“adr_street”: “Dronning Eufemias gate 30”, \n\t“adr_post_code”: “0191”,\n\t\"adr_city”: “Oslo”, \n\t“adr_country”: “NO”, \n\t“phone\": “+47 04800”, \n\t“birthday”: “1960-06-17”, \n\t“created”: “2015-07-01T10:42:00+01:00”, \n\t“updated”: “2015-10-01T10:42:00+01:00”,\n}\n```"
    },
    "CustomerProfile" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "customerid" : {
          "type" : "string"
        },
        "Notes (placeholder)" : {
          "type" : "string",
          "description" : "Needs lots more."
        }
      }
    },
    "CustomerScore" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Id of this score"
        },
        "customerid" : {
          "type" : "string",
          "description" : "Customer id"
        },
        "score" : {
          "type" : "integer",
          "description" : "The score"
        },
        "score_details" : {
          "type" : "string",
          "description" : "Optional details"
        }
      }
    },
    "Account" : {
      "type" : "object",
      "properties" : {
        "number" : {
          "type" : "string",
          "description" : "11 digits. Bank, etc can be determined from this: https://no.wikipedia.org/wiki/Kontonummer"
        },
        "type" : {
          "type" : "string",
          "description" : "Internal use, probably."
        },
        "name" : {
          "type" : "string",
          "description" : "Friendly name."
        },
        "currency" : {
          "type" : "string",
          "description" : "ISO 4217: alpha 3-letter upcase e.g EUR"
        },
        "balance" : {
          "type" : "integer",
          "format" : "int32"
        },
        "IBAN" : {
          "type" : "string",
          "description" : "ISO 13616:2007: https://www.iso.org/standard/41031.html"
        },
        "swift" : {
          "type" : "string",
          "description" : "ISO 9362: https://en.wikipedia.org/wiki/ISO_9362"
        },
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "ISO 8601: www.iso.org/iso/home/standards/iso8601.htm"
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "ISO 8601: www.iso.org/iso/home/standards/iso8601.htm"
        },
        "locked" : {
          "type" : "boolean",
          "description" : "Is this account locked?"
        },
        "notes" : {
          "type" : "string"
        }
      },
      "description" : "For now: One kind of Account for all.\n\n```\n{\n\t\t\"number\": \"05000000000\",\n\t\t\"type\": \"1\",\n\t\t\"name\": \"Gordon Gecko's savings account\",\n\t\t\"currency\": \"NOK\",\n\t\t\"balance\": 999999999,\n\t\t\"IBAN\": \"NO93 8601 1117 947\",\n\t\t\"SWIFT\": \"DNBANOKKXXX\",\n\t\t\"created\": \"2010-07-01T10:42:00+01:00\",\n\t\t\"updated\": \"2015-07-01T10:42:00+01:00\",\n\t\t\"locked\": 0,\n\t\t\"notes\": \"No lunch for you\"\n}\n```"
    },
    "Accountstatement" : {
      "type" : "object",
      "required" : [ "account", "month", "year" ],
      "properties" : {
        "account" : {
          "type" : "string"
        },
        "year" : {
          "type" : "string"
        },
        "month" : {
          "type" : "string"
        },
        "transactions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Transaction"
          }
        }
      }
    },
    "Balance" : {
      "type" : "object",
      "required" : [ "account", "amount", "timestamp" ],
      "properties" : {
        "account" : {
          "type" : "string",
          "description" : "Account number, 11 digits."
        },
        "amount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "timestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "ISO 8601: www.iso.org/iso/home/standards/iso8601.htm"
        }
      },
      "description" : "```\n{\n   \"account\": 12345678910,\n   \"balance\": 12345,\n   \"timestamp\": \"2017-01-03T09:56:28+00:0\",\n}\n```"
    },
    "Transaction" : {
      "type" : "object",
      "required" : [ "account", "amount", "currency", "id", "type" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "account" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "currency" : {
          "type" : "string"
        },
        "amount" : {
          "type" : "string"
        },
        "reference" : {
          "type" : "string",
          "description" : "Description"
        },
        "Notes (placeholder)" : {
          "type" : "string"
        }
      },
      "description" : "```\n{\n    \"transactions\": [\n        {\n\t\t\t\t    \"id\": \"<id>\",\n            \"merchant_id\": \"<id>\",\n            \"account_balance\": 12325,\n            \"amount\": -20,\n            \"created\": \"2016-08-05T08:00:00Z\",\n            \"currency\": \"NOK\",\n            \"description\": \"DNB Børsbaren\",\n            \"notes\": \"Dobbel espresso\",\n            \"settled\": \"2016-08-05T08:00:00Z \",\n            \"category\": \"restaurant\"\n        },\n        {\n             \"id\": \"<id>\",\n            \"merchant_id\": \"<id>\",\n\t\t\t\t\t\t\"account_balance\": 12305,\n            \"amount\": -20,\n            \"created\": \"2016-08-05T08:05:00Z\",\n            \"currency\": \"NOK\",\n            \"description\": \"DNB Børsbaren\",\n            \"notes\": \"Dobbel macchiato\",\n            \"settled\": \"2016-08-05T08:05:00Z \",\n            \"category\": \"restaurant\"\n        },\n    ]\n}\n```"
    },
    "SEPArequest" : {
      "type" : "object",
      "required" : [ "account", "id", "remote_account", "remote_bic", "remote_iban" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Unique"
        },
        "account" : {
          "type" : "string",
          "description" : "From-account"
        },
        "remote_iban" : {
          "type" : "string"
        },
        "remote_bic" : {
          "type" : "string"
        },
        "remote_account" : {
          "type" : "string"
        },
        "amount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "currency" : {
          "type" : "string"
        }
      },
      "description" : "```\n{\n  \"account_id\" : \"123456789\",\n  \"external_uid\" : \"99\",\n  \"remote_iban\": \"XXXXX\",\n  \"remote_bic\": \"XXXXX\",\n  \"remote_name\" : \"The Man,\n  \"amount\" : 100000,\n  \"subject\" : \"Enjoy\"\n}\n```"
    },
    "SEPAresponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "account" : {
          "type" : "string"
        },
        "amount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "remote_iban" : {
          "type" : "string"
        },
        "remote:_bic" : {
          "type" : "string"
        },
        "remote_name" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "updated" : {
          "type" : "string"
        },
        "currency" : {
          "type" : "string"
        }
      },
      "description" : "```\n{\n\"id\": \"01\",\n\"account\": \"123456789\",\n\"amount\": 100000\",\n\"currency\": \"NOK\",\n\"remote_iban\": \"XXXXX\",\n\"remote_bic\": \"XXXXX\",\n\"remote_name\": \"The Man\",\n\"state\": \"success\",\n\"created\": \"<timestamp>\",\n\"updated\": \"<timestamp>\",\n}\n\n```"
    },
    "Loan" : {
      "type" : "object",
      "required" : [ "created", "customerid", "expires", "id", "interest", "remainingamount", "totalamount", "type" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "totalamount" : {
          "type" : "string"
        },
        "remainingamount" : {
          "type" : "string"
        },
        "interest" : {
          "type" : "integer",
          "format" : "int32"
        },
        "customerid" : {
          "type" : "string",
          "description" : "11 digits"
        },
        "created" : {
          "type" : "string",
          "format" : "date-time"
        },
        "expires" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Remaining time can be calculated from this."
        },
        "details (placeholder)" : {
          "type" : "string"
        }
      },
      "description" : "For now: One common loan type for mortgage, car, credit card, etc"
    },
    "Insurance" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "description" : "To indicate: Car, house, travel, etc"
        },
        "name" : {
          "type" : "string",
          "description" : "DNB's name for this type of insurance. \"DNB Bolig Best\", etc."
        },
        "amount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "tc" : {
          "type" : "string",
          "description" : "URL (or other reference) to Terms & Conditions for this insurance."
        }
      },
      "description" : "For now: One common Insurance object for all types (house, car, health, etc)."
    },
    "Insuranceoffer" : {
      "type" : "object",
      "properties" : {
        "insurance" : {
          "$ref" : "#/definitions/Insurance"
        },
        "details" : {
          "type" : "string",
          "description" : "Details for this insurance offer: Date issued, valid until, etc."
        }
      },
      "description" : "For now: A simple object to represent an insurance offer. Refers to Insurance for simplicity."
    },
    "Insuranceclaim" : {
      "type" : "object",
      "properties" : {
        "details (placeholder)" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "For now: A simple object to represent an insurance claim. Should include all details necessary to make a claim."
    },
    "Car" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "licensenumber" : {
          "type" : "string",
          "description" : "Regnr"
        },
        "milage" : {
          "type" : "number",
          "description" : "In kilometers. No date specified for now."
        },
        "value_today" : {
          "type" : "number",
          "description" : "Estimated value, NOK"
        },
        "value_new" : {
          "type" : "number",
          "description" : "New value, NOK"
        },
        "description" : {
          "type" : "string",
          "description" : "Make, model, etc. This can be fetched from Statens Vegvesen (perhaps no API, just a web page? https://www.vegvesen.no/Kjoretoy/Kjop+og+salg/Kj%C3%B8ret%C3%B8yopplysninger)"
        }
      },
      "description" : "Used for car insurance."
    },
    "House" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "county" : {
          "type" : "number",
          "description" : "Kommunenummer"
        },
        "gnr" : {
          "type" : "string",
          "description" : "Gårdsnummer"
        },
        "bnr" : {
          "type" : "number",
          "description" : "Bruksnummer"
        },
        "value" : {
          "type" : "number",
          "description" : "NOK"
        },
        "description" : {
          "type" : "string",
          "description" : "mMay be empty"
        }
      },
      "description" : "Used for house insurance."
    },
    "Location" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Internal id"
        },
        "latitude" : {
          "type" : "number"
        },
        "longditude" : {
          "type" : "number"
        },
        "description" : {
          "type" : "string",
          "description" : "Name of place, or similar"
        }
      }
    },
    "VippsPaymentRequest" : {
      "type" : "object",
      "properties" : {
        "merchantInfo" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "merchantSerialNumber" : {
                "type" : "string",
                "description" : "Identifies a merchant sales channel i.e. website, mobile app etc."
              },
              "callBack" : {
                "type" : "string",
                "description" : "ViPPS will use this Call back URL to provide the status of initiated transaction. Length of the string is 255 characters"
              }
            }
          }
        },
        "customerInfo" : {
          "type" : "array",
          "items" : {
            "required" : [ "mobileNumber" ],
            "type" : "object",
            "properties" : {
              "mobileNumber" : {
                "type" : "string",
                "description" : "Mobile number of the user who has to pay for the  transaction from ViPPS.\nAllowed format:\n+47-xxxxxxxx\n+47xxxxxxxx\nxxxxxxxx"
              }
            }
          }
        },
        "transaction" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "orderId" : {
                "type" : "string",
                "description" : "Id which uniquely identifies an Order. Maximum length is 30 alphanumeric characters"
              },
              "refOrderId" : {
                "type" : "string",
                "description" : "Identifies if the payment references to some past orders registered with ViPPS. If defined, transactions for this payment will show up as child transactions of the specified order. Described functionality is not in place and is planned for future implementation"
              },
              "amount" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Amount in øre. 32 Bit Integer (2147483647)"
              },
              "transactionText" : {
                "type" : "string",
                "description" : "Transaction text that can be displayed to end user"
              },
              "timeStamp" : {
                "type" : "string",
                "description" : "Timestamp in ISO\n-\n8601 representing when the \norder has been made by merchant"
              }
            }
          }
        }
      },
      "description" : "Example:\n```\n{\n    \"merchantInfo\": {\n        \"merchantSerialNumber\": \"NSBWSHP12\",\n        \"callBack\": \"https://www.demo.no/api/callback\"\n    },\n    \"customerInfo\": {\n        \"mobileNumber\": \"90090900\"\n    },\n    \"transaction\": {\n        \"orderId\": \"219930212\",\n        \"refOrderId\": \"119930211\",\n        \"amount\": 1200,\n        \"transactionText\": \"Transaction text\",\n        \"timeStamp\":\"2014-06-24T08:34:25-07:00\"\n    }\n}\n```"
    },
    "Vippstransaction" : {
      "type" : "object",
      "properties" : {
        "orderId" : {
          "type" : "string"
        }
      },
      "description" : "From 8.7.5: https://www.vipps.no/portalfront/vipps/nedlast/eCommerce_API_v1.2.pdf\n\nExample:\n```\n{\n    \"orderId\": \"219930212\",\n    \"transactionSummary\": {\n        \"capturedAmount\":\"0\",\n        \"remainingAmoutTocapture\":\"0\",\n        \"refundedAmount\":\"1200\",\n        \"remainingAmountToRefund\":\"0\"\n      },\n     \"transactionLogHistory\": [{\n         \"timeStamp\": \"\",\n        \"operation\": \"\",\n        \"amount\": \"\",\n        \"transactionId\":\"\",\n       \"transactionText\"\n       \"requestId\": \"\"\n}]\n```"
    },
    "VippsPaymentResponse" : {
      "type" : "object",
      "properties" : {
        "orderId" : {
          "type" : "string"
        },
        "merchantSerialNumber" : {
          "type" : "string"
        },
        "transactionInfo" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "string"
              },
              "status" : {
                "type" : "string"
              },
              "transactionId" : {
                "type" : "string"
              },
              "timeStamp" : {
                "type" : "string"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "description" : "From 8.3.7: https://www.vipps.no/portalfront/vipps/nedlast/eCommerce_API_v1.2.pdf\n\n```\n{\n    \"orderId\": \"219930212\",\n    \"merchantSerialNumber\": \"NSBWSHP12\",\n    \"transactionInfo\": {\n        \"amount\": 1200,\n        \"status\": \"Initiate\",\n        \"transactionId\": \"1001234566\",\n        \"timeStamp\": \"2014-06-24T08:34:25-07:00\" , \n        \"message\":\"Please use vipps app to process the payment\"\n    }\n}\n```"
    },
    "VippsCustomer" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "accountnumber" : {
          "type" : "string"
        },
        "cardnumber" : {
          "type" : "string"
        }
      }
    },
    "Report" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "details" : {
          "type" : "string"
        }
      },
      "description" : "Placeholder for various reports."
    },
    "Annualreport" : {
      "type" : "object",
      "properties" : {
        "customerId" : {
          "type" : "string"
        },
        "year" : {
          "type" : "string"
        },
        "details" : {
          "type" : "string",
          "description" : "TDB. Around 80 fields."
        }
      },
      "description" : "See SAF-T: https://github.com/Skatteetaten/saf-t"
    },
    "Advice" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "details" : {
          "type" : "string",
          "description" : "TBD"
        }
      },
      "description" : "Advice for BM Dashboard."
    },
    "SAFTfile" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "fileurl" : {
          "type" : "string",
          "description" : "(Unless all data is included in Object)"
        }
      },
      "description" : "Standard Audit File - Tax\n\nExample file: https://github.com/Skatteetaten/saf-t/blob/master/Example%20Files/ExampleFile%20SAF-T%20Financial_999999999_20161125213512.xml"
    }
  }
}
