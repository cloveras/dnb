#%RAML 1.0
title: "7580"
description: "APIs for third parties. Created from ADD by Christian Løverås 2017-10-04.\n\
  \nData objects, payloads, etc are minimal versions - and in some cases copied from\
  \ \"API.json\": https://github.com/cloveras/dnb/\n"
version: "0.1"
protocols:
- "HTTPS"
baseUri: "https://1gh7oej.restletmocks.net"
mediaType:
- "application/json"
types:
  CustomerIndividual:
    type: "object"
    description: "Minimal, initial version.\n\n```\n{\n\t\"id\": \"17066099999\",\n\
      \t“email”: \"rune.bjerke@dnb.no\", \n\t“first_name”: “Rune”, \n\t“last_name”\
      : “Bjerke”, \n\t“gender”: “m”, \n\t“adr_street”: “Dronning Eufemias gate 30”\
      , \n\t“adr_post_code”: “0191”,\n\t\"adr_city”: “Oslo”, \n\t“adr_country”: “\
      NO”, \n\t“phone\": “+47 04800”, \n\t“birthday”: “1960-06-17”, \n\t“created”\
      : “2015-07-01T10:42:00+01:00”, \n\t“updated”: “2015-10-01T10:42:00+01:00”,\n\
      }\n```"
    properties:
      Id:
        type: "string"
        description: "Person: Personal number, 11 digits.\nCompany: Organization number,\
          \ 9 digits."
      status:
        type: "string"
        description: "Active, pending, closed, etc"
        required: false
      program:
        type: "string"
        description: "SAGA, etc"
        required: false
      Name:
        type: "string"
        description: "Person: Rune Bjerke.\nCompany: DNB"
      Address:
        type: "string"
        description: "Street address."
        required: false
      Postcode:
        type: "string"
        description: "4 digits if in Norway,"
      City:
        type: "string"
        description: "Oslo"
      Country:
        type: "string"
        description: "\"NO\". http://www.iso.org/iso/country_codes.htm"
      Email:
        type: "string"
        description: "example@example.com"
        required: false
      Phone:
        type: "string"
        description: "+47 04800"
        required: false
      Website:
        type: "string"
        description: "dnb.no"
        required: false
      welcomepackage:
        type: "string"
        description: "Id/tracking details for welcome package"
        required: false
      Notes:
        type: "string"
        required: false
  CustomerOrganization:
    type: "object"
    description: "Minimal, initial version."
    properties:
      customerId:
        type: "string"
        required: false
      customerDetails:
        type: "string"
        required: false
  Account:
    type: "object"
    description: "```\n{\n\t\t\"number\": \"05000000000\",\n\t\t\"type\": \"1\",\n\
      \t\t\"name\": \"Gordon Gecko's savings account\",\n\t\t\"currency\": \"NOK\"\
      ,\n\t\t\"balance\": 999999999,\n\t\t\"IBAN\": \"NO93 8601 1117 947\",\n\t\t\"\
      SWIFT\": \"DNBANOKKXXX\",\n\t\t\"created\": \"2010-07-01T10:42:00+01:00\",\n\
      \t\t\"updated\": \"2015-07-01T10:42:00+01:00\",\n\t\t\"locked\": 0,\n\t\t\"\
      notes\": \"No lunch for you\"\n}\n```"
    properties:
      accountNumber:
        type: "string"
        description: "11 digits. Bank, etc can be determined from this: https://no.wikipedia.org/wiki/Kontonummer"
      type:
        type: "string"
        description: "Internal use, probably."
        required: false
      name:
        type: "string"
        description: "Friendly name."
        required: false
      currency:
        type: "string"
        description: "ISO 4217: alpha 3-letter upcase e.g EUR"
        required: false
      balance:
        type: "integer"
        format: "int32"
        required: false
      IBAN:
        type: "string"
        description: "ISO 13616:2007: https://www.iso.org/standard/41031.html"
        required: false
      swift:
        type: "string"
        description: "ISO 9362: https://en.wikipedia.org/wiki/ISO_9362"
        required: false
      created:
        type: "datetime"
        description: "ISO 8601: www.iso.org/iso/home/standards/iso8601.htm"
        required: false
      updated:
        type: "datetime"
        description: "ISO 8601: www.iso.org/iso/home/standards/iso8601.htm"
        required: false
      locked:
        type: "boolean"
        description: "Is this account locked?"
        required: false
      notes:
        type: "string"
        required: false
  AccountStatement:
    type: "object"
    description: "Monthly account statement."
    properties:
      accountNumber:
        type: "string"
      year:
        type: "string"
      month:
        type: "string"
      transactions:
        type: "array"
        required: false
        items:
          type: "Payment"
  AccountBalance:
    type: "object"
    description: "```\n{\n   \"account\": 12345678910,\n   \"balance\": 12345,\n \
      \  \"timestamp\": \"2017-01-03T09:56:28+00:0\",\n}\n```"
    properties:
      accountNumber:
        type: "string"
      amount:
        type: "integer"
        format: "int32"
      timestamp:
        type: "datetime"
        description: "ISO 8601: www.iso.org/iso/home/standards/iso8601.htm"
  AccountPayment:
    type: "object"
    description: "Minimal, initial version."
    properties:
      paymentId:
        type: "string"
        required: false
      paymentDetails:
        type: "string"
        required: false
  AccountTermsAndConditions:
    type: "object"
    description: "DNB's T&C:\n* Individuals: https://www.dnb.no/en/personal/internet-banking-mobile-and-card/accounts.html\
      \ (is there a better one?)\n* Organizations: https://www.dnb.no/en/business/customer-service/terms-conditions.html\n\
      * General: https://www.dnb.no/en/global/generelle-vilkar.html \n\nLorem ipsum\
      \ dolor sit amet, consectetur adipiscing elit. Aenean semper elit vitae justo\
      \ semper dignissim. Aliquam vel felis commodo, eleifend lorem id, mollis sem.\
      \ Nulla ultricies nisi at dignissim blandit. Praesent iaculis nisi nec tempor\
      \ congue. Proin et aliquet mauris. Curabitur ut lacinia leo. Vivamus elementum\
      \ gravida dignissim. Mauris a cursus leo. Sed sit amet mollis nulla. Phasellus\
      \ et posuere ipsum, sit amet vehicula eros. Sed ultricies dui vitae volutpat\
      \ vulputate. Maecenas rutrum egestas porta.\n\nNulla ut lacus et nibh blandit\
      \ vehicula. Aliquam maximus libero est, consequat porttitor ex aliquet nec.\
      \ Sed luctus augue sed felis imperdiet venenatis. Quisque ut scelerisque nisl.\
      \ Phasellus pharetra lobortis nisi, ac maximus velit tempor eu. Donec tellus\
      \ sapien, congue vitae magna ut, venenatis luctus purus. Donec in ultrices ante,\
      \ ac dignissim dui. Vivamus feugiat sodales mauris, sit amet dictum risus scelerisque\
      \ in. Nulla tincidunt pellentesque convallis. Fusce elementum tincidunt nisi\
      \ id mattis. Fusce quis ante libero. Vestibulum tristique augue tortor, efficitur\
      \ pellentesque magna sagittis at. Donec at sapien mauris. Suspendisse dignissim\
      \ non turpis quis vehicula. Cras arcu velit, porta et lacus at, viverra varius\
      \ tellus.\n\nSed in odio eget purus sodales tempor quis et nibh. Vivamus consectetur\
      \ ac sem sit amet rutrum. Nulla accumsan libero vel tortor tristique interdum.\
      \ Quisque eget nulla vel tortor laoreet molestie. Phasellus tristique est mauris,\
      \ a suscipit orci porta nec. Duis mattis est quis aliquam scelerisque. Sed a\
      \ ullamcorper turpis. Curabitur pellentesque euismod sodales. Etiam placerat\
      \ at mauris eleifend luctus. Nulla sollicitudin mauris et metus ultrices mattis.\
      \ Nam in pharetra metus, eget mattis nisi. Mauris dapibus pharetra ex at tristique.\
      \ Cras convallis aliquam odio id commodo. Cras vel feugiat velit. \n\n\n"
    properties:
      termsId:
        type: "string"
        required: false
      termsDetails:
        type: "string"
        required: false
  CreditCard:
    type: "object"
    properties:
      creditCardId:
        type: "string"
      creditCardNumber:
        type: "string"
      creditCardDetails:
        type: "string"
        required: false
  CreditCardAccount:
    type: "object"
    description: "For now: One kind of Account for all.\n\n```\n{\n\t\t\"number\"\
      : \"05000000000\",\n\t\t\"type\": \"1\",\n\t\t\"name\": \"Gordon Gecko's savings\
      \ account\",\n\t\t\"currency\": \"NOK\",\n\t\t\"balance\": 999999999,\n\t\t\"\
      IBAN\": \"NO93 8601 1117 947\",\n\t\t\"SWIFT\": \"DNBANOKKXXX\",\n\t\t\"created\"\
      : \"2010-07-01T10:42:00+01:00\",\n\t\t\"updated\": \"2015-07-01T10:42:00+01:00\"\
      ,\n\t\t\"locked\": 0,\n\t\t\"notes\": \"No lunch for you\"\n}\n```"
    properties:
      accountNumber:
        type: "string"
      type:
        type: "string"
        description: "Internal use, probably."
        required: false
      name:
        type: "string"
        description: "Friendly name."
        required: false
      currency:
        type: "string"
        description: "ISO 4217: alpha 3-letter upcase e.g EUR"
        required: false
      balance:
        type: "integer"
        format: "int32"
        required: false
      IBAN:
        type: "string"
        description: "ISO 13616:2007: https://www.iso.org/standard/41031.html"
        required: false
      swift:
        type: "string"
        description: "ISO 9362: https://en.wikipedia.org/wiki/ISO_9362"
        required: false
      created:
        type: "datetime"
        description: "ISO 8601: www.iso.org/iso/home/standards/iso8601.htm"
        required: false
      updated:
        type: "datetime"
        description: "ISO 8601: www.iso.org/iso/home/standards/iso8601.htm"
        required: false
      locked:
        type: "boolean"
        description: "Is this account locked?"
        required: false
      notes:
        type: "string"
        required: false
  Transaction:
    type: "object"
    properties:
      transactionId:
        type: "string"
      transactionDetails:
        type: "string"
        required: false
  Payment:
    type: "object"
    properties:
      paymentId:
        type: "string"
      account:
        type: "string"
      type:
        type: "string"
      currency:
        type: "string"
      amount:
        type: "string"
      reference:
        type: "string"
        description: "Description"
        required: false
      Notes:
        type: "string"
        required: false
/customers:
  get:
    displayName: "Search customers"
    description: "Returns CustomerIndividual for now."
    queryParameters:
      customerName:
        type: "string"
        required: false
      customerSSN:
        type: "string"
        required: false
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "array"
            items:
              type: "CustomerIndividual"
      400:
        description: "Status 400"
      404:
        description: "Status 404"
/customers/{customerId}:
  uriParameters:
    customerId:
      type: "string"
  get:
    displayName: "Get customer"
    description: "Returns CustomerIndividual for now."
    responses:
      200:
        body:
          application/json:
            type: "CustomerIndividual"
      400: {}
      404: {}
/customers/individual:
  post:
    displayName: "New individual customer"
    body:
      application/json:
        type: "CustomerIndividual"
    responses:
      200:
        description: "Status 200"
      400: {}
/customers/individual/{customerId}:
  uriParameters:
    customerId:
      type: "string"
  get:
    displayName: "Get individual customer"
    responses:
      200:
        description: "Status 200"
      400:
        description: "Status 400"
      404:
        description: "Status 404"
  patch:
    displayName: "Update individual customer"
    body:
      application/json:
        type: "array"
        items:
          type: "string"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "CustomerIndividual"
      400: {}
      404:
        description: "Status 404"
/customers/organization:
  post:
    displayName: "New organization customer"
    body:
      application/json:
        type: "CustomerOrganization"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "CustomerOrganization"
      400: {}
/customers/organization/{customerId}:
  uriParameters:
    customerId:
      type: "string"
  get:
    displayName: "Get organization customer"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "CustomerOrganization"
      400:
        description: "Status 400"
      404:
        description: "Status 404"
  patch:
    displayName: "Update organization customer"
    body:
      application/json:
        type: "array"
        items:
          type: "string"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "CustomerOrganization"
      404:
        description: "Status 404"
/customers/{customerId}/accounts:
  uriParameters:
    customerId:
      type: "string"
  get:
    displayName: "Get accounts for customer"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "array"
            items:
              type: "Account"
      404:
        description: "No accounts."
/accounts:
  get:
    displayName: "Get account list for customer"
    description: "customerId is sent as part of the context object"
    headers:
      customerId:
        type: "string"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "array"
            items:
              type: "Account"
      400:
        description: "Status 400"
      404:
        description: "customerId unknown"
/accounts/deposit-accounts/{accountNumber}:
  uriParameters:
    accountNumber:
      type: "string"
  get:
    displayName: "Get deposit account"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "Account"
      404:
        description: "customerId unknown"
  post:
    displayName: "Create deposit account"
    body:
      application/json:
        type: "Account"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "Account"
      400: {}
/accounts/{accountNumber}/terms:
  uriParameters:
    accountNumber:
      type: "string"
  get:
    displayName: "Get account terms"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "AccountTermsAndConditions"
/accounts/{accountNumber}/balances:
  uriParameters:
    accountNumber:
      type: "string"
      description: "Account number, 11 digits."
  get:
    displayName: "Get account balances"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "array"
            items:
              type: "AccountBalance"
      401:
        description: "No balance for you."
      404:
        description: "Account not found."
      417:
        description: "Expectation Failed: Requires prior (paranormal) transfer of\
          \ customer's expectation (haha)."
/accounts/{accountNumber}/actions/close:
  uriParameters:
    accountNumber:
      type: "string"
  patch:
    displayName: "Close account"
    responses:
      200:
        description: "Status 200"
      404:
        description: "Status 404"
/accounts/{accountNumber}/transactions:
  uriParameters:
    accountNumber:
      type: "string"
  get:
    displayName: "Get transactions for account"
    queryParameters:
      pagesize:
        type: "integer"
        format: "int32"
        required: false
      pagenumber:
        type: "integer"
        format: "int32"
        required: false
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "array"
            items:
              type: "Payment"
      404:
        description: "Status 404"
/accounts/{accountNumber}/transactions/{transactionId}:
  uriParameters:
    accountNumber:
      type: "string"
    transactionId:
      type: "string"
  get:
    displayName: "Get transaction details"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "Payment"
      404:
        description: "Status 404"
/accounts/{accountNumber}/pending-payments:
  uriParameters:
    accountNumber:
      type: "string"
  get:
    displayName: "Get pending payments for account"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "array"
            items:
              type: "AccountPayment"
      404:
        description: "Status 404"
/accounts/{accountNumber}/pending-payments/{paymentId}:
  uriParameters:
    accountNumber:
      type: "string"
    paymentId:
      type: "string"
  get:
    displayName: "Get details for payment"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "AccountPayment"
      404:
        description: "Status 404"
  patch:
    displayName: "Update pending payment"
    body:
      application/json:
        type: "array"
        items:
          type: "string"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "AccountPayment"
      400:
        description: "Status 400"
      404:
        description: "Status 404"
  delete:
    displayName: "Delete pending payment"
    responses:
      200: {}
      404: {}
/accounts/{accountNumber}/safetospend:
  uriParameters:
    accountNumber:
      type: "string"
      description: "Account number, 11 digits."
  get:
    displayName: "Get \"safe to spend\" amount"
    description: "The current balance, minus known outgoing transactions, plus known\
      \ incoming transactions. "
    responses:
      200:
        description: "Here it is! Don't spend it all at once."
        body:
          application/json:
            type: "integer"
            format: "int32"
      401:
        description: "Hmmm, not really your account, is it?"
/creditcards/accounts:
  get:
    displayName: "Get credit card accounts for customer"
    description: "customerId is sent in the context object"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "array"
            items:
              type: "CreditCardAccount"
/creditcards/accounts/{creditCardId}:
  uriParameters:
    creditCardId:
      type: "string"
  get:
    displayName: "Get credit card details"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "CreditCardAccount"
/creditcards/accounts/{creditCardId}/balance:
  uriParameters:
    creditCardId:
      type: "string"
  get:
    displayName: "Get credit card balance"
    queryParameters:
      customerId:
        type: "string"
        required: false
      accountNumber:
        type: "string"
        required: false
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "array"
            items:
              type: "AccountBalance"
/creditcards/accounts/{creditCardId}/transactions:
  uriParameters:
    creditCardId:
      type: "string"
  get:
    displayName: "Get credit card transactions"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "array"
            items:
              type: "Transaction"
/creditcard/{creditCardId}:
  uriParameters:
    creditCardId:
      type: "string"
  get:
    displayName: "Get credit card details"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "CreditCard"
      404:
        description: "Status 404"
  patch:
    displayName: "Update credit card"
    responses:
      200:
        body:
          application/json:
            type: "CreditCard"
      400: {}
      404: {}
/creditcard/{creditCardId}/actions/block:
  uriParameters:
    creditCardId:
      type: "string"
  get:
    displayName: "Block credit card"
    responses:
      200:
        description: "Status 200"
      404:
        description: "Status 404"
/creditcard/{creditCardId}/actions/unblock:
  uriParameters:
    creditCardId:
      type: "string"
  get:
    displayName: "Unblock credit card"
    responses:
      200:
        description: "Status 200"
      404:
        description: "Status 404"
/payments/{paymentId}:
  uriParameters:
    paymentId:
      type: "string"
      description: "id"
  get:
    displayName: "Get payment details"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "Payment"
      401:
        description: "Status 401"
      404:
        description: "Status 404"
/payments/domestic:
  post:
    displayName: "Initiate payment"
    description: "Domestic payment with KID or message"
    body:
      application/json:
        type: "Payment"
    responses:
      200:
        description: "Status 200"
      400:
        description: "Status 400"
/payments/transfer:
  post:
    displayName: "Initiate transfer between accounts"
    description: "Transfer between accounts for PM Norway"
    body:
      application/json:
        type: "Payment"
    responses:
      200:
        description: "Status 200"
      400:
        description: "Status 400"
