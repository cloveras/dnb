#%RAML 1.0
title: "7580"
description: "APIs for third parties. Created from ADD by Christian Løverås 2017-10-04.\n\
  \nGuidelines:\n* Parameters: camelCase, starting with lowercase\n* Attributes of\
  \ data objects: CamelCase, starting with uppercase\n\nStandards:\n* Country: ISO\
  \ 3166-1 alpha-2: https://www.iso.org/standard/63546.html \n* Currency: ISO 4217:\
  \ alpha 3-letter upcase e.g \"EUR\": https://www.iso.org/iso-4217-currency-codes.html\n\
  * Date: ISO 8601: www.iso.org/iso/home/standards/iso8601.htm\n* SWIFT BIC: ISO 9362:\
  \ https://en.wikipedia.org/wiki/ISO_9362 \n* IBAN ISO 13616:2007: https://www.iso.org/standard/41031.html\
  \ \n* MCC: ISO 18245: https://www.iso.org/standard/33365.html (https://github.com/greggles/mcc-codes)\n\
  \n\nData objects, payloads, etc are minimal versions - and in some cases copied\
  \ from \"API.json\": https://github.com/cloveras/dnb/\n"
version: "0.1"
protocols:
- "HTTPS"
baseUri: "https://1gh7oej.restletmocks.net"
mediaType:
- "application/json"
types:
  CustomerIndividual:
    type: "object"
    properties:
      PersonNumber:
        type: "string"
        description: "11 digits."
      FirstName:
        type: "string"
        description: "Rune"
      LastName:
        type: "string"
        description: "Bjerke"
      Address:
        type: "Address"
      CountryOfBirth:
        type: "string"
        description: "\"NO\". http://www.iso.org/iso/country_codes.htm"
      Email:
        type: "string"
        description: "example@example.com"
        required: false
      Phone:
        type: "string"
        description: "+47 91 50 48 00"
        required: false
  CustomerOrganization:
    type: "object"
    description: "Minimal, initial version."
    properties:
      customerId:
        type: "string"
        required: false
      customerDetails:
        type: "string"
        required: false
  Account:
    type: "object"
    properties:
      AccountNumber:
        type: "string"
        description: "11 digits. Bank, etc can be determined from this: https://no.wikipedia.org/wiki/Kontonummer"
      Type:
        type: "string"
        description: "Examples/guesses:\n* Deposit\n* CreditCard\n* BSU\n* ASK"
      AccountName:
        type: "string"
        description: "Friendly name for the account: \"My savings account\", etc."
        required: false
      BalanceAvailable:
        type: "number"
      AccountOwner:
        type: "string"
        description: "SSN"
      AccountDetails:
        type: "AccountDetails"
        required: false
      TermsAndConditionsId:
        type: "string"
        description: "Reference to terms and conditions for this account (type)."
  AccountDetails:
    type: "object"
    description: "Details for an Account."
    properties:
      AccountNumber:
        type: "Account"
      IBAN:
        type: "string"
        description: "ISO 13616:2007: https://www.iso.org/standard/41031.html"
      BIC:
        type: "string"
        description: "ISO 9362: https://en.wikipedia.org/wiki/ISO_9362"
      Currency:
        type: "string"
        description: "Currency: ISO 4217: alpha 3-letter upcase e.g \"EUR\": https://www.iso.org/iso-4217-currency-codes.html"
      Created:
        type: "datetime"
        description: "ISO 8601: www.iso.org/iso/home/standards/iso8601.htm"
      Updated:
        type: "datetime"
        description: "ISO 8601: www.iso.org/iso/home/standards/iso8601.htm"
        required: false
      AccountInterestDetails:
        type: "AccountInterestDetails"
        required: false
  AccountInterestDetails:
    type: "object"
    properties:
      AccountNumber:
        type: "string"
        required: false
      InterestRate:
        type: "number"
        required: false
      EarnedInterestToDate:
        type: "number"
        required: false
      AccruedInterestAndFeesToDate:
        type: "number"
        required: false
      FeesToDate:
        type: "string"
        required: false
      AccruedInterestFromLastYear:
        type: "number"
        required: false
  AccountStatement:
    type: "object"
    description: "Monthly account statement."
    properties:
      accountNumber:
        type: "string"
      year:
        type: "string"
      month:
        type: "string"
      transactions:
        type: "array"
        required: false
        items:
          type: "Payment"
  AccountBalance:
    type: "object"
    description: "```\n{\n   \"account\": 12345678910,\n   \"balance\": 12345,\n \
      \  \"timestamp\": \"2017-01-03T09:56:28+00:0\",\n}\n```"
    properties:
      AccountNumber:
        type: "string"
      Currency:
        type: "string"
        required: false
      AmountAvailable:
        type: "number"
      AmountBook:
        type: "number"
        required: false
      Timestamp:
        type: "datetime"
        description: "ISO 8601: www.iso.org/iso/home/standards/iso8601.htm"
  AccountPayment:
    type: "object"
    description: "Minimal, initial version."
    properties:
      PaymentId:
        type: "string"
      FromAccount:
        type: "string"
      ToAccount:
        type: "string"
      Amount:
        type: "string"
      PaymentDetails:
        type: "string"
        required: false
  AccountTransaction:
    type: "object"
    properties:
      TransactionId:
        type: "string"
      Amount:
        type: "number"
        required: false
      DateBooking:
        type: "date-only"
        required: false
      DateValue:
        type: "date-only"
        required: false
      Description:
        type: "string"
        required: false
      Status:
        type: "string"
        description: "\"Booked\", \"Reserved\""
        required: false
      MerchantName:
        type: "string"
        required: false
      MCC:
        type: "string"
        required: false
  AccountTermsAndConditions:
    type: "object"
    description: "DNB's T&C:\n* Individuals: https://www.dnb.no/en/personal/internet-banking-mobile-and-card/accounts.html\
      \ (is there a better one?)\n* Organizations: https://www.dnb.no/en/business/customer-service/terms-conditions.html\n\
      * General: https://www.dnb.no/en/global/generelle-vilkar.html \n\nLorem ipsum\
      \ dolor sit amet, consectetur adipiscing elit. Aenean semper elit vitae justo\
      \ semper dignissim. Aliquam vel felis commodo, eleifend lorem id, mollis sem.\
      \ Nulla ultricies nisi at dignissim blandit. Praesent iaculis nisi nec tempor\
      \ congue. Proin et aliquet mauris. Curabitur ut lacinia leo. Vivamus elementum\
      \ gravida dignissim. Mauris a cursus leo. Sed sit amet mollis nulla. Phasellus\
      \ et posuere ipsum, sit amet vehicula eros. Sed ultricies dui vitae volutpat\
      \ vulputate. Maecenas rutrum egestas porta.\n\nNulla ut lacus et nibh blandit\
      \ vehicula. Aliquam maximus libero est, consequat porttitor ex aliquet nec.\
      \ Sed luctus augue sed felis imperdiet venenatis. Quisque ut scelerisque nisl.\
      \ Phasellus pharetra lobortis nisi, ac maximus velit tempor eu. Donec tellus\
      \ sapien, congue vitae magna ut, venenatis luctus purus. Donec in ultrices ante,\
      \ ac dignissim dui. Vivamus feugiat sodales mauris, sit amet dictum risus scelerisque\
      \ in. Nulla tincidunt pellentesque convallis. Fusce elementum tincidunt nisi\
      \ id mattis. Fusce quis ante libero. Vestibulum tristique augue tortor, efficitur\
      \ pellentesque magna sagittis at. Donec at sapien mauris. Suspendisse dignissim\
      \ non turpis quis vehicula. Cras arcu velit, porta et lacus at, viverra varius\
      \ tellus.\n\nSed in odio eget purus sodales tempor quis et nibh. Vivamus consectetur\
      \ ac sem sit amet rutrum. Nulla accumsan libero vel tortor tristique interdum.\
      \ Quisque eget nulla vel tortor laoreet molestie. Phasellus tristique est mauris,\
      \ a suscipit orci porta nec. Duis mattis est quis aliquam scelerisque. Sed a\
      \ ullamcorper turpis. Curabitur pellentesque euismod sodales. Etiam placerat\
      \ at mauris eleifend luctus. Nulla sollicitudin mauris et metus ultrices mattis.\
      \ Nam in pharetra metus, eget mattis nisi. Mauris dapibus pharetra ex at tristique.\
      \ Cras convallis aliquam odio id commodo. Cras vel feugiat velit. \n\n\n"
    properties:
      TermsId:
        type: "string"
        required: false
      TermsDetails:
        type: "string"
        required: false
  CreditCard:
    type: "object"
    properties:
      creditCardId:
        type: "string"
      creditCardOwner:
        type: "string"
        required: false
      creditCardNumber:
        type: "string"
      creditCardDetails:
        type: "string"
        required: false
  CreditCardAccount:
    type: "object"
    description: "\n```\n{\n\t\t\"number\": \"05000000000\",\n\t\t\"type\": \"1\"\
      ,\n\t\t\"name\": \"Gordon Gecko's savings account\",\n\t\t\"currency\": \"NOK\"\
      ,\n\t\t\"balance\": 999999999,\n\t\t\"created\": \"2010-07-01T10:42:00+01:00\"\
      ,\n\t\t\"updated\": \"2015-07-01T10:42:00+01:00\",\n\t\t\"locked\": 0,\n\t\t\
      \"notes\": \"No lunch for you\"\n\t\t\"available credit\"; 000 000\n}\n```"
    properties:
      accountNumber:
        type: "string"
      type:
        type: "string"
        description: "Internal use, probably."
        required: false
      name:
        type: "string"
        description: "Friendly name."
        required: false
      currency:
        type: "string"
        description: "ISO 4217: alpha 3-letter upcase e.g EUR"
        required: false
      balance:
        type: "integer"
        format: "int32"
        required: false
      created:
        type: "datetime"
        description: "ISO 8601: www.iso.org/iso/home/standards/iso8601.htm"
        required: false
      updated:
        type: "datetime"
        description: "ISO 8601: www.iso.org/iso/home/standards/iso8601.htm"
        required: false
      locked:
        type: "boolean"
        description: "Is this account locked?"
        required: false
      notes:
        type: "string"
        required: false
      Available credit:
        type: "number"
        required: false
  Transaction:
    type: "object"
    properties:
      transactionId:
        type: "string"
      transactionDetails:
        type: "string"
        required: false
  Payment:
    type: "object"
    properties:
      paymentId:
        type: "string"
      account:
        type: "string"
      type:
        type: "string"
      currency:
        type: "string"
      amount:
        type: "string"
      reference:
        type: "string"
        description: "Description"
        required: false
      Notes:
        type: "string"
        required: false
  PaymentInitiation:
    type: "object"
    description: "Not including the \"straksbetaling\" (imediate payment) flag, as\
      \ this will be the default."
    properties:
      Type:
        type: "string"
        description: "\"KID\", \"Message\""
      DebitAccountNumber:
        type: "string"
      CreditAccountNumber:
        type: "string"
      Amount:
        type: "number"
      PaymentDate:
        type: "datetime"
      Message:
        type: "string"
        description: "Used for both KID and Message, based on Type."
        required: false
  Currency:
    type: "string"
    description: "Currency: ISO 4217: alpha 3-letter upcase e.g EUR\n"
    example: "NOK"
  Address:
    type: "object"
    description: "Corresponds with address fields used internally in DNB. "
    properties:
      PostalAddressLine1:
        type: "string"
        description: "Street name and number"
        required: false
      PostalAddressLine2:
        type: "string"
        required: false
      PostCode:
        type: "string"
      PostCity:
        type: "string"
      PostCountry:
        type: "string"
  Error:
    type: "object"
    properties:
      ErrorNumber:
        type: "number"
        description: "4XX, 5XX, etc"
        required: false
      ErrorMessage:
        type: "string"
        description: "Explanation"
/customers/person/{customerId}:
  displayName: "View customer"
  description: "View full customer data for a retail customer"
  uriParameters:
    customerId:
      type: "string"
  get:
    displayName: "View customer"
    queryParameters:
      Customer ID:
        type: "string"
    responses:
      200:
        body:
          type: "CustomerIndividual"
/customers:
  get:
    displayName: "Search customers"
    description: "Returns CustomerIndividual for now."
    queryParameters:
      customerName:
        type: "string"
        required: false
      customerSSN:
        type: "string"
        required: false
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "array"
            items:
              type: "CustomerIndividual"
      400:
        description: "Status 400"
      404:
        description: "Status 404"
/customers/individual:
  post:
    displayName: "New individual customer"
    body:
      application/json:
        type: "CustomerIndividual"
    responses:
      200:
        description: "Status 200"
      400: {}
/customers/individual/{customerId}:
  uriParameters:
    customerId:
      type: "string"
  get:
    displayName: "Get individual customer"
    responses:
      200:
        description: "Status 200"
      400:
        description: "Status 400"
      404:
        description: "Status 404"
  patch:
    displayName: "Update individual customer"
    body:
      application/json:
        type: "array"
        items:
          type: "string"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "CustomerIndividual"
      400: {}
      404:
        description: "Status 404"
/customers/{customerId}/accounts:
  uriParameters:
    customerId:
      type: "string"
  get:
    displayName: "Get accounts for customer"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "array"
            items:
              type: "Account"
      404:
        description: "No accounts."
/accounts:
  get:
    displayName: "Get account list for customer"
    description: "customerId is sent as part of the context object"
    headers:
      customerId:
        type: "string"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "array"
            items:
              type: "Account"
      400:
        description: "Status 400"
      404:
        description: "customerId unknown"
/accounts/deposit-accounts/{accountNumber}:
  uriParameters:
    accountNumber:
      type: "string"
  get:
    displayName: "Get deposit account"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "Account"
      404:
        description: "customerId unknown"
  post:
    displayName: "Create deposit account"
    body:
      application/json:
        type: "Account"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "Account"
      400: {}
/accounts/{accountNumber}/terms:
  uriParameters:
    accountNumber:
      type: "string"
  get:
    displayName: "Get account terms"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "AccountTermsAndConditions"
/accounts/{accountNumber}/balances:
  uriParameters:
    accountNumber:
      type: "string"
      description: "Account number, 11 digits."
  get:
    displayName: "Get account balances"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "AccountBalance"
      401:
        description: "No balance for you."
      404:
        description: "Account not found."
      417:
        description: "Expectation Failed: Requires prior (paranormal) transfer of\
          \ customer's expectation (haha)."
/accounts/{accountNumber}/actions/close:
  uriParameters:
    accountNumber:
      type: "string"
  patch:
    displayName: "Close account"
    responses:
      200:
        description: "Status 200"
      404:
        description: "Status 404"
/accounts/{accountNumber}/transactions:
  uriParameters:
    accountNumber:
      type: "string"
  get:
    displayName: "Get transactions for account"
    queryParameters:
      PageSize:
        type: "integer"
        format: "int32"
        description: "Number of transactions on one page"
        required: false
      PageNumber:
        type: "integer"
        format: "int32"
        required: false
      SortOrder:
        type: "string"
        description: "\"Ascending\", \"Descending\""
        required: false
      DateFrom:
        type: "date-only"
        description: "Filter for start date (included)"
        required: false
      DateTo:
        type: "date-only"
        description: "Filter for end date (included)"
        required: false
      AmountFrom:
        type: "number"
        description: "Filter for minimum amount (included)"
        required: false
      AmountTo:
        type: "string"
        description: "Filter for maximum amount (included)"
        required: false
      MCC:
        type: "string"
        description: "Filter for MCC"
        required: false
      FreeText:
        type: "string"
        description: "Filter for free text"
        required: false
      IncludePending:
        type: "boolean"
        description: "Should pending transactions be included?"
        required: false
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "array"
            items:
              type: "Payment"
      401: {}
      404:
        description: "Status 404"
/accounts/{accountNumber}/transactions/{transactionId}:
  uriParameters:
    accountNumber:
      type: "string"
    transactionId:
      type: "string"
  get:
    displayName: "Get transaction details"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "Payment"
      404:
        description: "Status 404"
/accounts/{accountNumber}/pending-payments:
  uriParameters:
    accountNumber:
      type: "string"
  get:
    displayName: "Get pending payments for account"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "array"
            items:
              type: "AccountPayment"
      404:
        description: "Status 404"
/accounts/{accountNumber}/pending-payments/{paymentId}:
  uriParameters:
    accountNumber:
      type: "string"
    paymentId:
      type: "string"
  get:
    displayName: "Get details for payment"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "AccountPayment"
      404:
        description: "Status 404"
  patch:
    displayName: "Update pending payment"
    body:
      application/json:
        type: "array"
        items:
          type: "string"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "AccountPayment"
      400:
        description: "Status 400"
      404:
        description: "Status 404"
  delete:
    displayName: "Delete pending payment"
    responses:
      200: {}
      404: {}
/accounts/{accountNumber}/safetospend:
  uriParameters:
    accountNumber:
      type: "string"
      description: "Account number, 11 digits."
  get:
    displayName: "Get \"safe to spend\" amount"
    description: "The current balance, minus known outgoing transactions, plus known\
      \ incoming transactions. "
    responses:
      200:
        description: "Here it is! Don't spend it all at once."
        body:
          application/json:
            type: "integer"
            format: "int32"
      401:
        description: "Hmmm, not really your account, is it?"
/creditcards/accounts:
  get:
    displayName: "Get credit card accounts for customer"
    description: "customerId is sent in the context object"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "array"
            items:
              type: "CreditCardAccount"
/creditcards/accounts/{creditCardId}:
  uriParameters:
    creditCardId:
      type: "string"
  get:
    displayName: "Get credit card details"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "CreditCardAccount"
/creditcards/accounts/{creditCardId}/balance:
  uriParameters:
    creditCardId:
      type: "string"
  get:
    displayName: "Get credit card balance"
    queryParameters:
      customerId:
        type: "string"
        required: false
      accountNumber:
        type: "string"
        required: false
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "array"
            items:
              type: "AccountBalance"
/creditcards/accounts/{creditCardId}/transactions:
  uriParameters:
    creditCardId:
      type: "string"
  get:
    displayName: "Get credit card transactions"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "array"
            items:
              type: "Transaction"
/creditcard/{creditCardId}:
  uriParameters:
    creditCardId:
      type: "string"
  get:
    displayName: "Get credit card details"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "CreditCard"
      404:
        description: "Status 404"
  patch:
    displayName: "Update credit card"
    responses:
      200:
        body:
          application/json:
            type: "CreditCard"
      400: {}
      404: {}
/creditcard/{creditCardId}/actions/block:
  uriParameters:
    creditCardId:
      type: "string"
  get:
    displayName: "Block credit card"
    responses:
      200:
        description: "Status 200"
      404:
        description: "Status 404"
  patch:
    displayName: "Block credit card"
    responses:
      200:
        description: "Status 200"
      404:
        description: "Status 404"
/creditcard/{creditCardId}/actions/unblock:
  uriParameters:
    creditCardId:
      type: "string"
  get:
    displayName: "Unblock credit card"
    responses:
      200:
        description: "Status 200"
      404:
        description: "Status 404"
  patch:
    displayName: "Unblock credit card"
    headers:
      Unblock credit card:
        type: "string"
        required: false
    responses:
      200:
        description: "Status 200"
        headers:
          Unblock:
            type: "string"
            required: false
      404:
        description: "Status 404"
/payments/{paymentId}:
  uriParameters:
    paymentId:
      type: "string"
      description: "id"
  get:
    displayName: "Get payment details"
    responses:
      200:
        description: "Status 200"
        body:
          application/json:
            type: "Payment"
      401:
        description: "Status 401"
      404:
        description: "Status 404"
/payments/domestic:
  post:
    displayName: "Initiate payment"
    description: "Domestic payment with KID or message"
    body:
      application/json:
        type: "PaymentInitiation"
    responses:
      200:
        description: "Status 200"
        body:
          type: "string"
          description: "Returning id of the new payment"
      400:
        description: "Status 400"
      401: {}
/payments/transfer:
  post:
    displayName: "Initiate transfer between accounts"
    description: "Transfer between accounts for PM Norway"
    body:
      application/json:
        type: "Payment"
    responses:
      200:
        description: "Status 200"
      400:
        description: "Status 400"
/markets/FxRateService:
  displayName: "Get exchange rate details"
  description: "List of exchange rates for all currencies supported by DNB Markets"
  get:
    displayName: "Exhange rate"
    description: "Get exchange rate details"
    responses:
      200:
        headers:
          Exchange rate:
            type: "string"
            required: false
        body:
          type: "string"
